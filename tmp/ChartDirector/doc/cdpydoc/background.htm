<!DOCTYPE html>
<HTML>
<HEAD><meta name="viewport" content="width=device-width, initial-scale=1">
<Title>Background and Wallpaper</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector 6.0 (Python Edition)</p>
<p class="heading1">Background and Wallpaper</p>
<hr class="separator">
<div class="content">
<img src="images/background0.png">&nbsp;&nbsp;<img src="images/background1.png">&nbsp;&nbsp;<img src="images/background2.png">&nbsp;&nbsp;<img src="images/background3.png">
<br><br>
This example demonstrates some of the background effects supported by ChartDirector.<br><br>
ChartDirector supports using an image file as the wallpaper of the chart image background with <a href="BaseChart.setWallpaper.htm">BaseChart.setWallpaper</a>, and as the plot area background with <a href="PlotArea.setBackground2.htm">PlotArea.setBackground2</a>.<br><br>
In addition to wallpapers, ChartDirector supports alternating plot area background colors using <a href="PlotArea.setBackground.htm">PlotArea.setBackground</a> and <a href="PlotArea.setAltBgColor.htm">PlotArea.setAltBgColor</a>.<br><br>
You can switch the default colors to using a dark background with white lines and text in one step by changing the color palette to a <a href="pychartdir.whiteOnBlackPalette.htm">whiteOnBlackPalette</a> using <a href="BaseChart.setColors.htm">BaseChart.setColors</a>.
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[Standalone Version]</b> pythondemo\background.py
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/python
from pychartdir import *

def createChart(chartIndex) :

    # The data for the chart
    data = [85, 156, 179.5, 211, 123]
    labels = ["Mon", "Tue", "Wed", "Thu", "Fri"]

    # Create a XYChart object of size 270 x 270 pixels
    c = XYChart(270, 270)

    # Set the plot area at (40, 32) and of size 200 x 200 pixels
    plotarea = c.setPlotArea(40, 32, 200, 200)

    # Set the background style based on the input parameter
    if chartIndex == 0 :
        # Has wallpaper image
        c.setWallpaper("tile.gif")
    elif chartIndex == 1 :
        # Use a background image as the plot area background
        plotarea.setBackground2("bg.png")
    elif chartIndex == 2 :
        # Use white (0xffffff) and grey (0xe0e0e0) as two alternate plotarea background colors
        plotarea.setBackground(0xffffff, 0xe0e0e0)
    else :
        # Use a dark background palette
        c.setColors(whiteOnBlackPalette)

    # Set the labels on the x axis
    c.xAxis().setLabels(labels)

    # Add a color bar layer using the given data. Use a 1 pixel 3D border for the bars.
    c.addBarLayer3(data).setBorderColor(-1, 1)

    # Output the chart
    c.makeChart("background%s.png" % chartIndex)


createChart(0)
createChart(1)
createChart(2)
createChart(3)</pre></td></tr></table><br><b>[CGI Version]</b> pythondemo_cgi\background.py
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/python
from pychartdir import *
import cgi, sys, os

# Get HTTP query parameters
query = cgi.FieldStorage()

# This script can draw different charts depending on the chartIndex
chartIndex = int(query["img"].value)

# The data for the chart
data = [85, 156, 179.5, 211, 123]
labels = ["Mon", "Tue", "Wed", "Thu", "Fri"]

# Create a XYChart object of size 270 x 270 pixels
c = XYChart(270, 270)

# Set the plot area at (40, 32) and of size 200 x 200 pixels
plotarea = c.setPlotArea(40, 32, 200, 200)

# Set the background style based on the input parameter
if chartIndex == 0 :
    # Has wallpaper image
    c.setWallpaper(os.path.join(os.path.dirname(sys.argv[0]), "tile.gif"))
elif chartIndex == 1 :
    # Use a background image as the plot area background
    plotarea.setBackground2(os.path.join(os.path.dirname(sys.argv[0]), "bg.png"))
elif chartIndex == 2 :
    # Use white (0xffffff) and grey (0xe0e0e0) as two alternate plotarea background colors
    plotarea.setBackground(0xffffff, 0xe0e0e0)
else :
    # Use a dark background palette
    c.setColors(whiteOnBlackPalette)

# Set the labels on the x axis
c.xAxis().setLabels(labels)

# Add a color bar layer using the given data. Use a 1 pixel 3D border for the bars.
c.addBarLayer3(data).setBorderColor(-1, 1)

# Output the chart
print("Content-type: image/png\n")
binaryPrint(c.makeChart2(PNG))</pre></td></tr></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2017 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
