<!DOCTYPE html>
<HTML>
<HEAD><meta name="viewport" content="width=device-width, initial-scale=1">
<Title>Horizontal Bar Meter</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector 6.0 (Python Edition)</p>
<p class="heading1">Horizontal Bar Meter</p>
<hr class="separator">
<div class="content">
<img src="images/hbarmeter.png">
<br><br>
This example demonstrates the basic steps in creating a horizontal bar meter.<br><br>
A horizontal bar meter can be created using the following steps:<br><br>
<ul><li> Create a <a href="LinearMeter.htm">LinearMeter</a> object using <a href="LinearMeter.LinearMeter.htm">LinearMeter.LinearMeter</a>, optionally specify the background and border colors and whether to use rounded and/or thick frames..<br><br>
<li> Specify the size of the meter scale and the orientation of the scale labels using <a href="LinearMeter.setMeter.htm">LinearMeter.setMeter</a>. In this example, the scale labels are positioned at the top of the meter scale. This automatically implies the meter as horizontal.<br><br>
<li> Set the numeric scale of the meter using <a href="BaseMeter.setScale.htm">BaseMeter.setScale</a>.<br><br>
<li> Optionally add a color scale to the meter using <a href="BaseMeter.addColorScale.htm">BaseMeter.addColorScale</a>. Whereas the meter scale displays the values with text labels, a color scale represents the values with different colors.<br><br>
<li> Add a bar to the meter using <a href="LinearMeter.addBar.htm">LinearMeter.addBar</a>. In this example, the bar is added with a glass shading effect specified using <a href="pychartdir.glassEffect.htm">pychartdir.glassEffect</a>.</ul>
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[Standalone Version]</b> pythondemo\hbarmeter.py
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/python
from pychartdir import *

# The value to display on the meter
value = 75.35

# Create an LinearMeter object of size 260 x 66 pixels with a very light grey (0xeeeeee) background,
# and a rounded 3-pixel thick light grey (0xaaaaaa) border
m = LinearMeter(260, 66, 0xeeeeee, 0xaaaaaa)
m.setRoundedFrame(Transparent)
m.setThickFrame(3)

# Set the scale region top-left corner at (18, 24), with size of 222 x 20 pixels. The scale labels
# are located on the top (implies horizontal meter)
m.setMeter(18, 24, 222, 20, Top)

# Set meter scale from 0 - 100, with a tick every 10 units
m.setScale(0, 100, 10)

# Add a 5-pixel thick smooth color scale to the meter at y = 48 (below the meter scale)
smoothColorScale = [0, 0x0000ff, 25, 0x0088ff, 50, 0x00ff00, 75, 0xffff00, 100, 0xff0000]
m.addColorScale(smoothColorScale, 48, 5)

# Add a light blue (0x0088ff) bar from 0 to the data value with glass effect and 4 pixel rounded
# corners
m.addBar(0, value, 0x0088ff, glassEffect(NormalGlare, Top), 4)

# Output the chart
m.makeChart("hbarmeter.png")</pre></td></tr></table><br><b>[CGI Version]</b> pythondemo_cgi\hbarmeter.py
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/python
from pychartdir import *

# The value to display on the meter
value = 75.35

# Create an LinearMeter object of size 260 x 66 pixels with a very light grey (0xeeeeee) background,
# and a rounded 3-pixel thick light grey (0xaaaaaa) border
m = LinearMeter(260, 66, 0xeeeeee, 0xaaaaaa)
m.setRoundedFrame(Transparent)
m.setThickFrame(3)

# Set the scale region top-left corner at (18, 24), with size of 222 x 20 pixels. The scale labels
# are located on the top (implies horizontal meter)
m.setMeter(18, 24, 222, 20, Top)

# Set meter scale from 0 - 100, with a tick every 10 units
m.setScale(0, 100, 10)

# Add a 5-pixel thick smooth color scale to the meter at y = 48 (below the meter scale)
smoothColorScale = [0, 0x0000ff, 25, 0x0088ff, 50, 0x00ff00, 75, 0xffff00, 100, 0xff0000]
m.addColorScale(smoothColorScale, 48, 5)

# Add a light blue (0x0088ff) bar from 0 to the data value with glass effect and 4 pixel rounded
# corners
m.addBar(0, value, 0x0088ff, glassEffect(NormalGlare, Top), 4)

# Output the chart
print("Content-type: image/png\n")
binaryPrint(m.makeChart2(PNG))</pre></td></tr></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2017 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
