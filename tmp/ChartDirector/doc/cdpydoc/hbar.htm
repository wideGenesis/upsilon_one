<!DOCTYPE html>
<HTML>
<HEAD><meta name="viewport" content="width=device-width, initial-scale=1">
<Title>Borderless Bar Chart</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector 6.0 (Python Edition)</p>
<p class="heading1">Borderless Bar Chart</p>
<hr class="separator">
<div class="content">
<img src="images/hbar.png">
<br><br>
This example demonstrates a horizontal bar chart with no axes, grid lines or and plot area border. It also demonstrates using gradient colors for the bars, and a number of other ChartDirector features.<br><br>
The key features demonstrated in this example are:<br><br>
<ul><li> Swap the x and y axes to create a horizontal bar chart using <a href="XYChart.swapXY.htm">XYChart.swapXY</a>.<br><br>
<li> Create a gradient color that changes smoothly from dark green to white along a horizontal direction using <a href="BaseChart.gradientColor.htm">BaseChart.gradientColor</a>, then use it as the bar color in <a href="XYChart.addBarLayer.htm">XYChart.addBarLayer</a>.<br><br>
<li> Set the plot area background, border and grid line colors to <a href="pychartdir.Transparent.htm">Transparent</a> using <a href="XYChart.setPlotArea.htm">XYChart.setPlotArea</a>.<br><br>
<li> Set the x-axis, y-axis and y-axis labels to <a href="pychartdir.Transparent.htm">Transparent</a> using <a href="Axis.setColors.htm">Axis.setColors</a>.<br><br>
<li> Set the x-axis font style to deep red 10 points Arial Bold Italic by using the <a href="TextBox.setFontStyle.htm">TextBox.setFontStyle</a> and <a href="TextBox.setFontColor.htm">TextBox.setFontColor</a> of the <a href="TextBox.htm">TextBox</a> object that represents the x-axis label prototype (obtained using <a href="Axis.setLabels.htm">Axis.setLabels</a>).<br><br>
<li> Set the aggregate bar label style to deep red 10 points Times Bold Italic using <a href="Layer.setAggregateLabelStyle.htm">Layer.setAggregateLabelStyle</a>.<br><br>
<li> Customize the aggregate bar labels by using <a href="Layer.setAggregateLabelFormat.htm">Layer.setAggregateLabelFormat</a>.</ul>
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[Standalone Version]</b> pythondemo\hbar.py
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/python
from pychartdir import *

# The data for the bar chart
data = [3.9, 8.1, 10.9, 14.2, 18.1, 19.0, 21.2, 23.2, 25.7, 36]

# The labels for the bar chart
labels = ["Bastic Group", "Simpa", "YG Super", "CID", "Giga Tech", "Indo Digital", "Supreme",
    "Electech", "THP Thunder", "Flash Light"]

# Create a XYChart object of size 600 x 250 pixels
c = XYChart(600, 250)

# Add a title to the chart using Arial Bold Italic font
c.addTitle("Revenue Estimation - Year 2002", "arialbi.ttf")

# Set the plotarea at (100, 30) and of size 400 x 200 pixels. Set the plotarea border, background
# and grid lines to Transparent
c.setPlotArea(100, 30, 400, 200, Transparent, Transparent, Transparent, Transparent, Transparent)

# Add a bar chart layer using the given data. Use a gradient color for the bars, where the gradient
# is from dark green (0x008000) to white (0xffffff)
layer = c.addBarLayer(data, c.gradientColor(100, 0, 500, 0, 0x008000, 0xffffff))

# Swap the axis so that the bars are drawn horizontally
c.swapXY(1)

# Set the bar gap to 10%
layer.setBarGap(0.1)

# Use the format "US$ xxx millions" as the bar label
layer.setAggregateLabelFormat("US$ {value} millions")

# Set the bar label font to 10pt Times Bold Italic/dark red (0x663300)
layer.setAggregateLabelStyle("timesbi.ttf", 10, 0x663300)

# Set the labels on the x axis
textbox = c.xAxis().setLabels(labels)

# Set the x axis label font to 10pt Arial Bold Italic
textbox.setFontStyle("arialbi.ttf")
textbox.setFontSize(10)

# Set the x axis to Transparent, with labels in dark red (0x663300)
c.xAxis().setColors(Transparent, 0x663300)

# Set the y axis and labels to Transparent
c.yAxis().setColors(Transparent, Transparent)

# Output the chart
c.makeChart("hbar.png")</pre></td></tr></table><br><b>[CGI Version]</b> pythondemo_cgi\hbar.py
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/python
from pychartdir import *

# The data for the bar chart
data = [3.9, 8.1, 10.9, 14.2, 18.1, 19.0, 21.2, 23.2, 25.7, 36]

# The labels for the bar chart
labels = ["Bastic Group", "Simpa", "YG Super", "CID", "Giga Tech", "Indo Digital", "Supreme",
    "Electech", "THP Thunder", "Flash Light"]

# Create a XYChart object of size 600 x 250 pixels
c = XYChart(600, 250)

# Add a title to the chart using Arial Bold Italic font
c.addTitle("Revenue Estimation - Year 2002", "arialbi.ttf")

# Set the plotarea at (100, 30) and of size 400 x 200 pixels. Set the plotarea border, background
# and grid lines to Transparent
c.setPlotArea(100, 30, 400, 200, Transparent, Transparent, Transparent, Transparent, Transparent)

# Add a bar chart layer using the given data. Use a gradient color for the bars, where the gradient
# is from dark green (0x008000) to white (0xffffff)
layer = c.addBarLayer(data, c.gradientColor(100, 0, 500, 0, 0x008000, 0xffffff))

# Swap the axis so that the bars are drawn horizontally
c.swapXY(1)

# Set the bar gap to 10%
layer.setBarGap(0.1)

# Use the format "US$ xxx millions" as the bar label
layer.setAggregateLabelFormat("US$ {value} millions")

# Set the bar label font to 10pt Times Bold Italic/dark red (0x663300)
layer.setAggregateLabelStyle("timesbi.ttf", 10, 0x663300)

# Set the labels on the x axis
textbox = c.xAxis().setLabels(labels)

# Set the x axis label font to 10pt Arial Bold Italic
textbox.setFontStyle("arialbi.ttf")
textbox.setFontSize(10)

# Set the x axis to Transparent, with labels in dark red (0x663300)
c.xAxis().setColors(Transparent, 0x663300)

# Set the y axis and labels to Transparent
c.yAxis().setColors(Transparent, Transparent)

# Output the chart
print("Content-type: image/png\n")
binaryPrint(c.makeChart2(PNG))</pre></td></tr></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2017 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
