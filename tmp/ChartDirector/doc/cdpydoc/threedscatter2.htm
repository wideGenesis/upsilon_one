<!DOCTYPE html>
<HTML>
<HEAD><meta name="viewport" content="width=device-width, initial-scale=1">
<Title>3D Scatter Chart (2)</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector 6.0 (Python Edition)</p>
<p class="heading1">3D Scatter Chart (2)</p>
<hr class="separator">
<div class="content">
<img src="images/threedscatter2.png">
<br><br>
This example extends the <a href="threedscatter.htm">3D Scatter Chart (1)</a> example by including drop lines, using alternative view angles and continuous coloring.<br><br>
Drop lines are lines that drop from the data points to the XY plane. They help to visualize the "height" (the z-coordinate) of the points and can be useful if there are not too many data points.<br><br>
<ul><li> The alternative view angles are set using <a href="ThreeDChart.setViewAngle.htm">ThreeDChart.setViewAngle</a>.<br><br>
<li> The drop lines are added using <a href="ThreeDScatterGroup.setDropLine.htm">ThreeDScatterGroup.setDropLine</a>.<br><br>
<li> Continuous coloring are configured using <a href="ColorAxis.setColorGradient.htm">ColorAxis.setColorGradient</a>.</ul>
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[Standalone Version]</b> pythondemo\threedscatter2.py
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/python
from pychartdir import *

# The XYZ data for the 3D scatter chart as 3 random data series
r = RanSeries(3)
xData = r.getSeries2(20, 100, -10, 10)
yData = r.getSeries2(20, 100, -10, 10)
zData = r.getSeries2(20, 100, -10, 10)

# Create a ThreeDScatterChart object of size 720 x 520 pixels
c = ThreeDScatterChart(720, 520)

# Add a title to the chart using 20 points Times New Roman Italic font
c.addTitle("3D Scatter Chart (2)  ", "timesi.ttf", 20)

# Set the center of the plot region at (350, 240), and set width x depth x height to 360 x 360 x 270
# pixels
c.setPlotRegion(350, 240, 360, 360, 270)

# Set the elevation and rotation angles to 15 and 30 degrees
c.setViewAngle(15, 30)

# Add a scatter group to the chart using 13 pixels glass sphere symbols, in which the color depends
# on the z value of the symbol
g = c.addScatterGroup(xData, yData, zData, "", GlassSphere2Shape, 13, SameAsMainColor)

# Add grey (888888) drop lines to the symbols
g.setDropLine(0x888888)

# Add a color axis (the legend) in which the left center is anchored at (645, 220). Set the length
# to 200 pixels and the labels on the right side. Use smooth gradient coloring.
c.setColorAxis(645, 220, Left, 200, Right).setColorGradient()

# Set the x, y and z axis titles using 10 points Arial Bold font
c.xAxis().setTitle("X-Axis Place Holder", "arialbd.ttf", 10)
c.yAxis().setTitle("Y-Axis Place Holder", "arialbd.ttf", 10)
c.zAxis().setTitle("Z-Axis Place Holder", "arialbd.ttf", 10)

# Output the chart
c.makeChart("threedscatter2.png")</pre></td></tr></table><br><b>[CGI Version]</b> pythondemo_cgi\threedscatter2.py
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/python
from pychartdir import *

# The XYZ data for the 3D scatter chart as 3 random data series
r = RanSeries(3)
xData = r.getSeries2(20, 100, -10, 10)
yData = r.getSeries2(20, 100, -10, 10)
zData = r.getSeries2(20, 100, -10, 10)

# Create a ThreeDScatterChart object of size 720 x 520 pixels
c = ThreeDScatterChart(720, 520)

# Add a title to the chart using 20 points Times New Roman Italic font
c.addTitle("3D Scatter Chart (2)  ", "timesi.ttf", 20)

# Set the center of the plot region at (350, 240), and set width x depth x height to 360 x 360 x 270
# pixels
c.setPlotRegion(350, 240, 360, 360, 270)

# Set the elevation and rotation angles to 15 and 30 degrees
c.setViewAngle(15, 30)

# Add a scatter group to the chart using 13 pixels glass sphere symbols, in which the color depends
# on the z value of the symbol
g = c.addScatterGroup(xData, yData, zData, "", GlassSphere2Shape, 13, SameAsMainColor)

# Add grey (888888) drop lines to the symbols
g.setDropLine(0x888888)

# Add a color axis (the legend) in which the left center is anchored at (645, 220). Set the length
# to 200 pixels and the labels on the right side. Use smooth gradient coloring.
c.setColorAxis(645, 220, Left, 200, Right).setColorGradient()

# Set the x, y and z axis titles using 10 points Arial Bold font
c.xAxis().setTitle("X-Axis Place Holder", "arialbd.ttf", 10)
c.yAxis().setTitle("Y-Axis Place Holder", "arialbd.ttf", 10)
c.zAxis().setTitle("Z-Axis Place Holder", "arialbd.ttf", 10)

# Output the chart
print("Content-type: image/png\n")
binaryPrint(c.makeChart2(PNG))</pre></td></tr></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2017 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
