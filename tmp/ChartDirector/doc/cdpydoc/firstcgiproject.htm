<!DOCTYPE html>
<HTML>
<HEAD><meta name="viewport" content="width=device-width, initial-scale=1">
<Title>The First CGI Project</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">
<p class="heading0">ChartDirector 6.0 (Python Edition)</p>
<p class="heading1">The First CGI Project</p>
<hr class="separator">
<div class="content">The following is exactly the same as <a href="firstproject.htm">The First Project</a> in the previous section, except that instead of creating the chart image in a file, it "streams" the chart image directly to the browser.<br><br>
This script is intended to be run as a CGI in a web server.<br><br>
<b>[CGI Version]</b> pythondemo_cgi\simplebar.py
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/python
from pychartdir import *

# The data for the bar chart
data = [85, 156, 179.5, 211, 123]

# The labels for the bar chart
labels = ["Mon", "Tue", "Wed", "Thu", "Fri"]

# Create a XYChart object of size 250 x 250 pixels
c = XYChart(250, 250)

# Set the plotarea at (30, 20) and of size 200 x 200 pixels
c.setPlotArea(30, 20, 200, 200)

# Add a bar chart layer using the given data
c.addBarLayer(data)

# Set the labels on the x axis.
c.xAxis().setLabels(labels)

# Output the chart
print("Content-type: image/png\n")
binaryPrint(c.makeChart2(PNG))</pre></td></tr></table><br>
The code is almost identical to the code in <a href="firstproject.htm">The First Project</a>, so the details will not be further explained. The major difference is that instead of using <a href="BaseChart.makeChart.htm">BaseChart.makeChart</a> to output the chart as a PNG file, it outputs the chart as a binary string using <a href="BaseChart.makeChart2.htm">BaseChart.makeChart2</a> and streams the data directly to the browser.<br><br>
The chart image is streamed to the browser using the following code:<br><br>
<div style="background-color:#cccccc;width:99%;padding:5px;box-sizing:border-box;"><pre>print("Content-type: image/png\n")
binaryPrint(c.makeChart2(PNG))</pre></div><br>
The above code first prints the MIME Content-type header, and then use <a href="pychartdir.binaryPrint.htm">pychartdir.binaryPrint</a> to print out the binary image for delivery to the browser.<br><br>
<a href="pychartdir.binaryPrint.htm">pychartdir.binaryPrint</a> is a ChartDirector utility for binary printing, which solves two problems with the Python "print" statement when printing binary images:<br><br>
<ul> <li>On Windows, by default, the "print" statement will print in text mode. It will replace [LF] with [CR][LF], and will corrupt a binary image. The "binaryPrint" statement always print in binary mode.<br><br>
<li>The "print" statement will automatically append a new line character at the end of the output, which is incorrect for a binary image. The "binaryPrint" statement will not append any character at the end. </ul></div><br>
<hr class="separator"><div class="copyright">&copy; 2017 Advanced Software Engineering Limited. All rights reserved.</div></body>
</HTML>
