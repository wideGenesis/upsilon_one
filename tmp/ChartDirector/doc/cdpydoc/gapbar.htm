<!DOCTYPE html>
<HTML>
<HEAD><meta name="viewport" content="width=device-width, initial-scale=1">
<Title>Bar Gap</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector 6.0 (Python Edition)</p>
<p class="heading1">Bar Gap</p>
<hr class="separator">
<div class="content">
<img src="images/gapbar0.png">&nbsp;&nbsp;<img src="images/gapbar1.png">&nbsp;&nbsp;<img src="images/gapbar2.png">&nbsp;&nbsp;<img src="images/gapbar3.png">&nbsp;&nbsp;<img src="images/gapbar4.png">&nbsp;&nbsp;<img src="images/gapbar5.png">
<br><br>
This example demonstrates the effects of different bar gaps configured using <a href="BarLayer.setBarGap.htm">BarLayer.setBarGap</a>.
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[Standalone Version]</b> pythondemo\gapbar.py
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/python
from pychartdir import *

def createChart(chartIndex) :

    bargap = chartIndex * 0.25 - 0.25

    # The data for the bar chart
    data = [100, 125, 245, 147, 67]

    # The labels for the bar chart
    labels = ["Mon", "Tue", "Wed", "Thu", "Fri"]

    # Create a XYChart object of size 150 x 150 pixels
    c = XYChart(150, 150)

    # Set the plotarea at (27, 20) and of size 120 x 100 pixels
    c.setPlotArea(27, 20, 120, 100)

    # Set the labels on the x axis
    c.xAxis().setLabels(labels)

    if bargap &gt;= 0 :
        # Add a title to display to bar gap using 8pt Arial font
        c.addTitle("      Bar Gap = %s" % (bargap), "arial.ttf", 8)
    else :
        # Use negative value to mean TouchBar
        c.addTitle("      Bar Gap = TouchBar", "arial.ttf", 8)
        bargap = TouchBar

    # Add a bar chart layer using the given data and set the bar gap
    c.addBarLayer(data).setBarGap(bargap)

    # Output the chart
    c.makeChart("gapbar%s.png" % chartIndex)


createChart(0)
createChart(1)
createChart(2)
createChart(3)
createChart(4)
createChart(5)</pre></td></tr></table><br><b>[CGI Version]</b> pythondemo_cgi\gapbar.py
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/python
from pychartdir import *
import cgi, sys

# Get HTTP query parameters
query = cgi.FieldStorage()

# This script can draw different charts depending on the chartIndex
chartIndex = int(query["img"].value)

bargap = chartIndex * 0.25 - 0.25

# The data for the bar chart
data = [100, 125, 245, 147, 67]

# The labels for the bar chart
labels = ["Mon", "Tue", "Wed", "Thu", "Fri"]

# Create a XYChart object of size 150 x 150 pixels
c = XYChart(150, 150)

# Set the plotarea at (27, 20) and of size 120 x 100 pixels
c.setPlotArea(27, 20, 120, 100)

# Set the labels on the x axis
c.xAxis().setLabels(labels)

if bargap &gt;= 0 :
    # Add a title to display to bar gap using 8pt Arial font
    c.addTitle("      Bar Gap = %s" % (bargap), "arial.ttf", 8)
else :
    # Use negative value to mean TouchBar
    c.addTitle("      Bar Gap = TouchBar", "arial.ttf", 8)
    bargap = TouchBar

# Add a bar chart layer using the given data and set the bar gap
c.addBarLayer(data).setBarGap(bargap)

# Output the chart
print("Content-type: image/png\n")
binaryPrint(c.makeChart2(PNG))</pre></td></tr></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2017 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
