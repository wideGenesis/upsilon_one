import os
import csv
import datetime
import time
import uuid

from datetime import timedelta, datetime
from telethon import utils

from telegram import buttons
from telegram import sql_queries as sql
from telegram import menu
from telegram import shared
from payments.payagregator import PaymentAgregator
from project_shared import *
from telegram import instructions as ins
from quotes.stock_quotes_news import fin_news
from quotes.parsers import nyse_nasdaq_stat
from messages.message import *
from telethon.tl.types import InputMediaPoll, Poll, PollAnswer, DocumentAttributeFilename, DocumentAttributeVideo

PAYMENT_AGGREGATOR = None
PAYMENT_AGGREGATOR_TIMER = None


# ============================== Callbacks =======================

async def callback_handler(event, client, img_path=None, yahoo_path=None, engine=None):
    sender_id = event.original_update.user_id
    entity = await client.get_input_entity(sender_id)
    chat = await event.get_chat()
    old_msg_id = await shared.get_old_msg_id(sender_id)

    # ============================== üìÅ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é 1 —É—Ä–æ–≤–µ–Ω—å=============================
    if event.data == b'a1':
        await event.edit()
        if old_msg_id is not None:
            await client.edit_message(event.input_sender, old_msg_id, '–ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–æ–≤', buttons=buttons.keyboard_a1)
        else:
            msg = await client.send_message(event.input_sender, '–ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–æ–≤', buttons=buttons.keyboard_a1)
            await shared.save_old_message(sender_id, msg)

    elif event.data == b'my_portfolio':
        await event.edit()
        if old_msg_id is not None:
            await client.edit_message(event.input_sender, old_msg_id, '–ú–æ–π –ø–æ—Ä—Ç—Ñ–µ–ª—å\n'
                                                                      '–ö–∞–∫ –∫—É–ø–∏—Ç—å –ø–æ—Ä—Ç—Ñ–µ–ª—å? - /instruction27\n'
                                                                      '–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –¥–µ–ø–æ–∑–∏—Ç - /mindepo',
                                      buttons=buttons.keyboard_portfolio)
        else:
            msg = await client.edit_message(event.input_sender, old_msg_id, '–ú–æ–π –ø–æ—Ä—Ç—Ñ–µ–ª—å\n'
                                                                            '–ö–∞–∫ –∫—É–ø–∏—Ç—å –ø–æ—Ä—Ç—Ñ–µ–ª—å? - /instruction27\n'
                                                                            '–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –¥–µ–ø–æ–∑–∏—Ç - /mindepo',
                                            buttons=buttons.keyboard_portfolio)
            await shared.save_old_message(sender_id, msg)

    elif event.data == b'a3':
        await event.edit()
        if old_msg_id is not None:
            await client.edit_message(event.input_sender, old_msg_id, '–°–∫—Ä–∏–Ω–µ—Ä –∞–∫—Ü–∏–π',
                                      buttons=buttons.keyboard_screener)
        else:
            msg = await client.send_message(event.input_sender, '–°–∫—Ä–∏–Ω–µ—Ä –∞–∫—Ü–∏–π', buttons=buttons.keyboard_screener)
            await shared.save_old_message(sender_id, msg)

    elif event.data == b'instructions':
        await event.edit()
        msg = await client.send_message(event.input_sender, ins.instructions_main, buttons=buttons.keyboard_info_back)
        await shared.delete_old_message(client, sender_id)

    elif event.data == b'a8':
        await event.edit()
        if old_msg_id is not None:
            await client.edit_message(event.input_sender, old_msg_id, '–õ–µ–Ω—Ç–∞ –Ω–æ–≤–æ—Å—Ç–µ–π', buttons=buttons.keyboard_a8)
        else:
            msg = await client.send_message(event.input_sender, '–õ–µ–Ω—Ç–∞ –Ω–æ–≤–æ—Å—Ç–µ–π', buttons=buttons.keyboard_a8)
            await shared.save_old_message(sender_id, msg)

    elif event.data == b'donate':
        await event.edit()
        if old_msg_id is not None:
            await client.edit_message(event.input_sender, old_msg_id, 'Donate', buttons=buttons.keyboard_donate)
        else:
            msg = await client.send_message(event.input_sender, 'Donate', buttons=buttons.keyboard_donate)
            await shared.save_old_message(sender_id, msg)

    elif event.data == b'main':
        await event.edit()
        if old_msg_id is not None:
            await client.edit_message(event.input_sender, old_msg_id, 'üìÅ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', buttons=buttons.keyboard_0)
        else:
            menu_msg = await client.send_message(event.input_sender, 'üìÅ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', buttons=buttons.keyboard_0)
            await shared.delete_old_message(client, sender_id)
            await shared.save_old_message(sender_id, menu_msg)

    # ============================== –ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–æ–≤ 2 —É—Ä–æ–≤–µ–Ω—å=============================
    elif event.data == b'a1a1':
        await event.edit()
        if old_msg_id is not None:
            await client.edit_message(event.input_sender, old_msg_id, '–ê–Ω–∞–ª–∏–∑ –°–®–ê',
                                      buttons=buttons.keyboard_us_analysis)
        else:
            msg = await client.send_message(event.input_sender, '–ê–Ω–∞–ª–∏–∑ –°–®–ê', buttons=buttons.keyboard_us_analysis)
            await shared.save_old_message(sender_id, msg)

    elif event.data == b'us5x':
        await event.edit()
        if old_msg_id is not None:
            await client.edit_message(event.input_sender, old_msg_id, '–ü–æ–¥—Ä–æ–±–Ω—ã–π –∞–Ω–∞–ª–∏–∑',
                                      buttons=buttons.keyboard_us_market)
        else:
            msg = await client.send_message(event.input_sender, '–ü–æ–¥—Ä–æ–±–Ω—ã–π –∞–Ω–∞–ª–∏–∑',
                                            buttons=buttons.keyboard_us_market)
            await shared.save_old_message(sender_id, msg)

    elif event.data == b'us5z':
        await event.edit()
        await shared.delete_old_message(client, sender_id)
        await client.send_file(entity, img_path + 'sectors.png')
        await client.send_message(event.input_sender, '–û–±–∑–æ—Ä —Ä—ã–Ω–∫–∞ –°–®–ê\n'
                                                      '/instruction02')
        await client.send_file(entity, img_path + 'treemap_1d.png')
        await client.send_message(event.input_sender, '–¢–µ–ø–ª–æ–≤–∞—è –∫–∞—Ä—Ç–∞ —Ä—ã–Ω–∫–∞ –°–®–ê\n'
                                                      '/instruction04',
                                  buttons=buttons.keyboard_us_analysis_back)

    elif event.data == b'a1a2':
        await event.edit()
        await shared.delete_old_message(client, sender_id)
        await client.send_file(entity, img_path + 'crypto.png')
        await client.send_message(event.input_sender, '–û–±–∑–æ—Ä BTCUSD –∏ ETHUSD\n'
                                                      '/instruction07')
        await client.send_file(entity, img_path + 'coins_treemap.png')
        await client.send_message(event.input_sender, '–¢–µ–ø–ª–æ–≤–∞—è –∫–∞—Ä—Ç–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç\n'
                                                      '/instruction04',
                                  buttons=buttons.keyboard_a1_back)
    elif event.data == b'a1a3':
        await event.edit()
        await shared.delete_old_message(client, sender_id)
        await client.send_file(entity, img_path + 'rtsi.png')
        await client.send_message(event.input_sender, '–û–±–∑–æ—Ä —Ä—ã–Ω–∫–∞ –†–§\n'
                                                      '/instruction08')
        await client.send_file(entity, img_path + 'moex_map.png')
        await client.send_message(event.input_sender, '–¢–µ–ø–ª–æ–≤–∞—è –∫–∞—Ä—Ç–∞ –∞–∫—Ü–∏–π –†–§\n'
                                                      '/instruction04',
                                  buttons=buttons.keyboard_a1_back)
    elif event.data == b'world_markets':
        await event.edit()
        await shared.delete_old_message(client, sender_id)
        await client.send_file(entity, img_path + 'world.png')
        await client.send_message(event.input_sender, '–û–±–∑–æ—Ä –º–∏—Ä–æ–≤—ã—Ö —Ä—ã–Ω–∫–æ–≤\n'
                                                      '/instruction04')
        await client.send_file(entity, img_path + 'global_treemap_1d.png')
        await client.send_message(event.input_sender, '–¢–µ–ø–ª–æ–≤–∞—è –∫–∞—Ä—Ç–∞ –º–∏—Ä–æ–≤—ã—Ö –∞–∫—Ü–∏–π\n'
                                                      '/instruction04',
                                  buttons=buttons.keyboard_a1_back)

    # elif event.data == b'a1a4':
    #     await event.edit()
    #     message = await client.send_message(entity=entity, message='–ó–∞–≥—Ä—É–∑–∫–∞...')
    #     await client.send_message(entity=entity, message='–î–µ–Ω–µ–∂–Ω—ã–µ –ø–æ—Ç–æ–∫–∏ –≤ USD')
    #     await client.send_message(entity=entity, message='–î–µ–Ω–µ–∂–Ω—ã–µ –ø–æ—Ç–æ–∫–∏ SPY')
    #     await client.send_file(entity, img_path + 'inflows_SPY.png')
    #     await client.send_message(entity=entity, message='–î–µ–Ω–µ–∂–Ω—ã–µ –ø–æ—Ç–æ–∫–∏ QQQ')
    #     await client.send_file(entity, img_path + 'inflows_QQQ.png')
    #     await client.send_message(entity=entity, message='–î–µ–Ω–µ–∂–Ω—ã–µ –ø–æ—Ç–æ–∫–∏ VTI')
    #     await client.send_file(entity, img_path + 'inflows_VTI.png')
    #     time.sleep(1)
    #     await client.send_message(entity=entity, message='–î–µ–Ω–µ–∂–Ω—ã–µ –ø–æ—Ç–æ–∫–∏ VEA')
    #     await client.send_file(entity, img_path + 'inflows_VEA.png')
    #     await client.send_message(entity=entity, message='–î–µ–Ω–µ–∂–Ω—ã–µ –ø–æ—Ç–æ–∫–∏ VWO')
    #     await client.send_file(entity, img_path + 'inflows_VWO.png')
    #     await client.send_message(entity=entity, message='–î–µ–Ω–µ–∂–Ω—ã–µ –ø–æ—Ç–æ–∫–∏ LQD')
    #     await client.send_file(entity, img_path + 'inflows_LQD.png')
    #     await client.send_message(entity=entity, message='–î–µ–Ω–µ–∂–Ω—ã–µ –ø–æ—Ç–æ–∫–∏ VXX')
    #     await client.send_file(entity, img_path + 'inflows_VXX.png')
    #     time.sleep(1)
    #     await client.send_message(entity=entity, message='–î–µ–Ω–µ–∂–Ω—ã–µ –ø–æ—Ç–æ–∫–∏ SHY')
    #     await client.send_file(entity, img_path + 'inflows_SHY.png')
    #     await client.send_message(entity=entity, message='–î–µ–Ω–µ–∂–Ω—ã–µ –ø–æ—Ç–æ–∫–∏ TLT')
    #     await client.send_file(entity, img_path + 'inflows_TLT.png')
    #     await client.edit_message(message, '–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –¥–µ–Ω–µ–∂–Ω—ã–µ –ø–æ—Ç–æ–∫–∏ –æ—Å–Ω–æ–≤–Ω—ã—Ö ETF –∑–∞ –º–µ—Å—è—Ü')
    #     await client.send_message(event.input_sender, '–ö–∞–∫ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–µ–Ω–µ–∂–Ω—ã–µ –ø–æ—Ç–æ–∫–∏? \n'
    #                                                   '/instruction09',
    #                               buttons=buttons.keyboard_a1_back)

    elif event.data == b'a1a6':
        await event.edit()
        if old_msg_id is not None:
            await client.edit_message(event.input_sender, old_msg_id, '–û—Å–Ω–æ–≤–Ω—ã–µ –º–∞–∫—Ä–æ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã',
                                      buttons=buttons.keyboard_core_macro)
        else:
            msg = await client.send_message(event.input_sender, '–û—Å–Ω–æ–≤–Ω—ã–µ –º–∞–∫—Ä–æ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã',
                                            buttons=buttons.keyboard_core_macro)
            await shared.save_old_message(sender_id, msg)
    elif event.data == b'a1a-1':
        await event.edit()
        msg = await client.send_message(event.input_sender, '–ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–æ–≤', buttons=buttons.keyboard_a1)
        await shared.save_old_message(sender_id, msg)

    # ============================== –ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–æ–≤ —É—Ä–æ–≤–µ–Ω—å 3 =============================
    elif event.data == b'us1':
        await event.edit()
        await shared.delete_old_message(client, sender_id)
        msg = nyse_nasdaq_stat()
        message = await client.send_message(entity=entity, message='–ó–∞–≥—Ä—É–∑–∫–∞...')
        await client.send_message(entity=entity, message=msg)

        await client.edit_message(message, '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞—Å—Ç—É—â–∏—Ö/–ø–∞–¥–∞—é—â–∏—Ö –∞–∫—Ü–∏–π –∏ –æ–±—ä—ë–º—ã –∑–∞ —Å–µ–≥–æ–¥–Ω—è')
        await client.send_message(event.input_sender, '–ö–∞–∫ –∏–Ω—Ç–µ–ø—Ä–∏—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç–æ—Ä–≥–æ–≤? \n'
                                                      '/instruction01',
                                  buttons=buttons.keyboard_us_market_back)
    # elif event.data == b'us2':
    #     await event.edit()
    #     message = await client.send_message(entity=entity, message='–ó–∞–≥—Ä—É–∑–∫–∞...')
    #     await client.send_file(entity, img_path + 'sectors.png')
    #     await client.edit_message(message, '–ü–æ–¥—Ä–æ–±–Ω—ã–π –∞–Ω–∞–ª–∏–∑')
    #     await client.send_message(event.input_sender, '–ö–∞–∫ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫–∏ –≤—ã—à–µ? \n'
    #                                                   '/instruction02\n/instruction05\n/instruction06',
    #                               buttons=buttons.keyboard_us_market_back)
    elif event.data == b'us6':
        await event.edit()
        await shared.delete_old_message(client, sender_id)
        message = await client.send_message(entity=entity, message='–ó–∞–≥—Ä—É–∑–∫–∞...')
        filename2 = os.path.join(img_path, 'sma50.csv')
        with open(filename2, newline='') as f2:
            data2 = csv.reader(f2, delimiter=',')
            for row2 in data2:
                r2 = str(row2).strip("['']").replace("'", "")
                await client.send_message(entity=entity, message=f'{r2}')
        await client.edit_message(message, '–ú–æ–º–µ–Ω—Ç—É–º –≤ –∞–∫—Ü–∏—è—Ö')
        await client.send_message(event.input_sender, '–ö–∞–∫ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞—Ç—å –º–æ–º–µ–Ω—Ç—É–º? \n'
                                                      '/instruction03',
                                  buttons=buttons.keyboard_us_market_back)

    # elif event.data == b'us3':
    #     await event.edit()
    #     message = await client.send_message(entity=entity, message='–ó–∞–≥—Ä—É–∑–∫–∞...')
    #     await client.send_message(event.input_sender, '–¢–µ–ø–ª–æ–≤–∞—è –∫–∞—Ä—Ç–∞ 1-day performance')
    #     await client.send_file(entity, img_path + 'treemap_1d.png')
    #     await client.send_message(event.input_sender, '–¢–µ–ø–ª–æ–≤–∞—è –∫–∞—Ä—Ç–∞ YtD performance')
    #     await client.send_file(entity, img_path + 'treemap_ytd.png')
    #     await client.edit_message(message, '–¢–µ–ø–ª–æ–≤—ã–µ –∫–∞—Ä—Ç—ã')
    #     await client.send_message(event.input_sender, '–ö–∞–∫ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–ø–ª–æ–≤—ã–µ –∫–∞—Ä—Ç—ã? \n'
    #                                                   '/instruction04',
    #                               buttons=buttons.keyboard_us_market_back)
    # elif event.data == b'us4':
    #     await event.edit()
    #     message = await client.send_message(entity=entity, message='–ó–∞–≥—Ä—É–∑–∫–∞...')
    #     filename4 = os.path.join(img_path, 'treasury_curve.csv')
    #     with open(filename4, newline='') as f4:
    #         data4 = csv.reader(f4, delimiter=',')
    #         for row4 in data4:
    #             row4 = str(row4).replace("'", "").strip("[]")
    #             await client.send_message(entity=entity, message=f'{row4}')
    #
    #     msg01 = 'SP500 DIV YIELD'
    #     await client.send_message(entity=entity, message=msg01)
    #     filename5 = os.path.join(img_path, 'spx_yield.csv')
    #     temp = []
    #     with open(filename5, newline='') as f5:
    #         data5 = csv.reader(f5, delimiter=' ')
    #         for row5 in data5:
    #             temp.append(row5)
    #     msg0 = str(temp[-1]).strip("[]")
    #     msg0 = msg0.split(',')
    #     await client.send_message(entity=entity, message=f'{msg0[0]} {msg0[-1]}')
    #     await client.edit_message(message, '–ö—Ä–∏–≤–∞—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏ –∏ –¥–∏–≤–∏–¥–µ–Ω–¥—ã')
    #     await client.send_message(event.input_sender, '–ö–∞–∫ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞—Ç—å –∫—Ä–∏–≤—É—é –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏? /instruction05',
    #                               buttons=buttons.keyboard_us_market_back)
    elif event.data == b'us5':
        await event.edit()
        await shared.delete_old_message(client, sender_id)
        message = await client.send_message(entity=entity, message='–ó–∞–≥—Ä—É–∑–∫–∞...')
        filename6 = os.path.join(img_path, 'vix_cont.csv')
        with open(filename6, newline='') as f6:
            data6 = csv.reader(f6, delimiter=',')
            for row6 in data6:
                row6 = str(row6).strip("[']")
                await client.send_message(entity=entity, message=f'{row6}')
        await client.send_file(entity, img_path + 'vix_curve.png')
        await client.edit_message(message, '–ö—Ä–∏–≤–∞—è –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç–∏')
        await client.send_message(event.input_sender, '–ö–∞–∫ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞—Ç—å –∫—Ä–∏–≤—É—é –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç–∏? /instruction06',
                                  buttons=buttons.keyboard_us_market_back)

    elif event.data == b'us7':
        await event.edit()
        await shared.delete_old_message(client, sender_id)
        message = await client.send_message(entity=entity, message='–ó–∞–≥—Ä—É–∑–∫–∞...')
        await client.edit_message(message, '–ö–ª—é—á–µ–≤—ã–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∞–∫—Ü–∏–π –∫–æ–º–ø–∞–Ω–∏–∏')
        await client.send_message(entity=entity, message=ins.instruction21)
        await client.send_message(event.input_sender, '–ö–∞–∫ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–ª—é—á–µ–≤—ã–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏? \n'
                                                      '/instruction22',
                                  buttons=buttons.keyboard_us_market_back)

    # ============================== –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Å—Ç—Ä–∞—Ç–µ–≥–∏–π =============================
    # elif event.data == b'a2a1':
    #     await event.edit()
    #     message = await client.send_message(entity=entity, message='–ó–∞–≥—Ä—É–∑–∫–∞...')
    #     await client.edit_message(message, '–¢–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å —Ä–∏—Å–∫–∞')
    #     await client.send_message(event.input_sender, '–ó–∞—á–µ–º –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å —Ä–∏—Å–∫–∞? /instruction03',
    #                               buttons=buttons.keyboard_a2_back)
    # elif event.data == b'a2a2':
    #     await event.edit()
    #     message = await client.send_message(entity=entity, message='–ó–∞–≥—Ä—É–∑–∫–∞...')
    #     await client.edit_message(message, '–û—Ü–µ–Ω–∫–∞/–∞—É–¥–∏—Ç –ø–æ—Ä—Ç—Ñ–µ–ª—è')
    #     await client.send_message(event.input_sender, '–ó–∞—á–µ–º –ø—Ä–æ–≤–æ–¥–∏—Ç—å –∞—É–¥–∏—Ç —Å–≤–æ–µ–≥–æ –ø–æ—Ä—Ç—Ñ–µ–ª—è? /instruction04',
    #                               buttons=buttons.keyboard_a2_back)
    elif event.data == b'hist_parking':
        await event.edit()
        await shared.delete_old_message(client, sender_id)
        message = await client.send_message(entity=entity, message='–ó–∞–≥—Ä—É–∑–∫–∞...')
        await client.edit_message(message, '–ü–∞—Ä–∫–æ–≤–æ—á–Ω—ã–π –ø–æ—Ä—Ç—Ñ–µ–ª—å')

        await client.send_message(event.input_sender, '–ü–æ–¥—Ä–æ–±–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞',
                                  file='http://watchlister.ru/upsilon_files/parking.pdf')
        await client.send_message(event.input_sender, '–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å —Å 2008 –≥–æ–¥–∞',
                                  file=STATS_PATH + 'parking3.png')
        # await client.send_message(event.input_sender, '–ö–∞–∫ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–∏–º—É–ª—è—Ü–∏–π –ú–æ–Ω—Ç–µ-–ö–∞—Ä–ª–æ?\n'
        #                                               '/instruction19',
        #                           file=STATS_PATH + 'parking2.png')
        await client.send_message(event.input_sender, '–ö–æ–º—É –∏ –∫–æ–≥–¥–∞ –ø–æ–∫—É–ø–∞—Ç—å –ø–∞—Ä–∫–æ–≤–æ—á–Ω—ã–π –ø–æ—Ä—Ç—Ñ–µ–ª—å?\n'
                                                      '/instruction14',
                                  buttons=buttons.keyboard_a3_back)

    elif event.data == b'hist_allweather':
        await event.edit()
        await shared.delete_old_message(client, sender_id)
        message = await client.send_message(entity=entity, message='–ó–∞–≥—Ä—É–∑–∫–∞...')
        await client.edit_message(message, '–í—Å–µ–ø–æ–≥–æ–¥–Ω—ã–π –ø–æ—Ä—Ç—Ñ–µ–ª—å')
        await client.send_message(event.input_sender, '–ü–æ–¥—Ä–æ–±–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞',
                                  file='http://watchlister.ru/upsilon_files/allweather.pdf')
        await client.send_message(event.input_sender, '–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å —Å 2008 –≥–æ–¥–∞',
                                  file=STATS_PATH + 'allweather3.png')
        # await client.send_message(event.input_sender, '–ö–∞–∫ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–∏–º—É–ª—è—Ü–∏–π –ú–æ–Ω—Ç–µ-–ö–∞—Ä–ª–æ?\n'
        #                                               '/instruction19',
        #                           file=STATS_PATH + 'allweather2.png')
        await client.send_message(event.input_sender, '–ö–æ–º—É –∏ –∫–æ–≥–¥–∞ –ø–æ–∫—É–ø–∞—Ç—å –≤—Å–µ–ø–æ–≥–æ–¥–Ω—ã–π –ø–æ—Ä—Ç—Ñ–µ–ª—å?\n'
                                                      '/instruction15',
                                  buttons=buttons.keyboard_a3_back)

    elif event.data == b'hist_balanced':
        await event.edit()
        await shared.delete_old_message(client, sender_id)
        message = await client.send_message(entity=entity, message='–ó–∞–≥—Ä—É–∑–∫–∞...')
        await client.edit_message(message, '–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ—Ä—Ç—Ñ–µ–ª—å')
        await client.send_message(event.input_sender, '–ü–æ–¥—Ä–æ–±–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞',
                                  file='http://watchlister.ru/upsilon_files/balanced.pdf')
        await client.send_message(event.input_sender, '–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å —Å 2008 –≥–æ–¥–∞',
                                  file=STATS_PATH + 'balanced3.png')
        # await client.send_message(event.input_sender, '–ö–∞–∫ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–∏–º—É–ª—è—Ü–∏–π –ú–æ–Ω—Ç–µ-–ö–∞—Ä–ª–æ?\n'
        #                                               '/instruction19',
        #                           file=STATS_PATH + 'balanced2.png')
        await client.send_message(event.input_sender, '–ö–æ–º—É –∏ –∫–æ–≥–¥–∞ –ø–æ–∫—É–ø–∞—Ç—å —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ—Ä—Ç—Ñ–µ–ª—å?\n'
                                                      '/instruction16',
                                  buttons=buttons.keyboard_a3_back)

    elif event.data == b'hist_agg':
        await event.edit()
        await shared.delete_old_message(client, sender_id)
        message = await client.send_message(entity=entity, message='–ó–∞–≥—Ä—É–∑–∫–∞...')
        await client.edit_message(message, '–ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π –ø–æ—Ä—Ç—Ñ–µ–ª—å')
        await client.send_message(event.input_sender, '–ü–æ–¥—Ä–æ–±–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞',
                                  file='http://watchlister.ru/upsilon_files/aggressive.pdf')
        await client.send_message(event.input_sender, '–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å —Å 2016 –≥–æ–¥–∞',
                                  file=STATS_PATH + 'aggressive3.png')
        # await client.send_message(event.input_sender, '–ö–∞–∫ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–∏–º—É–ª—è—Ü–∏–π –ú–æ–Ω—Ç–µ-–ö–∞—Ä–ª–æ?\n'
        #                                               '/instruction19',
        #                           file=STATS_PATH + 'aggressive2.png')
        await client.send_message(event.input_sender, '–ö–æ–º—É –∏ –∫–æ–≥–¥–∞ –ø–æ–∫—É–ø–∞—Ç—å –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π –ø–æ—Ä—Ç—Ñ–µ–ª—å?\n'
                                                      '/instruction17',
                                  buttons=buttons.keyboard_a3_back)

    elif event.data == b'hist_lev':
        await event.edit()
        await shared.delete_old_message(client, sender_id)
        message = await client.send_message(entity=entity, message='–ó–∞–≥—Ä—É–∑–∫–∞...')
        await client.edit_message(message, '–ü–ª–µ—á–µ–≤–æ–π –ø–æ—Ä—Ç—Ñ–µ–ª—å')
        await client.send_message(event.input_sender, '–ü–æ–¥—Ä–æ–±–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞',
                                  file='http://watchlister.ru/upsilon_files/leveraged.pdf')
        await client.send_message(event.input_sender, '–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å —Å 2016 –≥–æ–¥–∞',
                                  file=STATS_PATH + 'leveraged3.png')
        # await client.send_message(event.input_sender, '–ö–∞–∫ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–∏–º—É–ª—è—Ü–∏–π –ú–æ–Ω—Ç–µ-–ö–∞—Ä–ª–æ?\n'
        #                                               '/instruction19',
        #                           file=STATS_PATH + 'leveraged2.png')
        await client.send_message(event.input_sender, '–ö–æ–º—É –∏ –∫–æ–≥–¥–∞ –ø–æ–∫—É–ø–∞—Ç—å –ø–ª–µ—á–µ–≤–æ–π –ø–æ—Ä—Ç—Ñ–µ–ª—å?\n'
                                                      '/instruction18',
                                  buttons=buttons.keyboard_a3_back)

    elif event.data == b'hist_elastic':
        await event.edit()
        await shared.delete_old_message(client, sender_id)
        message = await client.send_message(entity=entity, message='–ó–∞–≥—Ä—É–∑–∫–∞...')
        await client.edit_message(message, 'Elastic - –ø–æ—Ä—Ç—Ñ–µ–ª—å —Ç–æ–ª—å–∫–æ –∏–∑ –∞–∫—Ü–∏–π')
        await client.send_message(event.input_sender, '–ü–æ–¥—Ä–æ–±–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞',
                                  file='http://watchlister.ru/upsilon_files/elastic.pdf')
        await client.send_message(event.input_sender, '–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å —Å 2008 –≥–æ–¥–∞',
                                  file=STATS_PATH + 'elastic3.png')
        # await client.send_message(event.input_sender, '–ö–∞–∫ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–∏–º—É–ª—è—Ü–∏–π –ú–æ–Ω—Ç–µ-–ö–∞—Ä–ª–æ?\n'
        #                                               '/instruction19',
        #                           file=STATS_PATH + 'elastic2.png')
        await client.send_message(event.input_sender, '–ö–æ–º—É –∏ –∫–æ–≥–¥–∞ –ø–æ–∫—É–ø–∞—Ç—å Elastic –ø–æ—Ä—Ç—Ñ–µ–ª—å?\n'
                                                      '/instruction23',
                                  buttons=buttons.keyboard_a3_back)

    elif event.data == b'hist_yolo':
        await event.edit()
        await shared.delete_old_message(client, sender_id)
        message = await client.send_message(entity=entity, message='–ó–∞–≥—Ä—É–∑–∫–∞...')
        await client.edit_message(message, 'Yolo - –ø–æ—Ä—Ç—Ñ–µ–ª—å —Ç–æ–ª—å–∫–æ –∏–∑ –∞–∫—Ü–∏–π, —Ç–æ—Ä–≥—É–µ–º—ã—Ö –Ω–∞ spbexchange. '
                                           '–î–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤ –°–±–µ—Ä, –¢–∏–Ω—å–∫–æ—Ñ—Ñ, –ê–ª—å—Ñ–∞-–±–∞–Ω–∫, –í–¢–ë')
        await client.send_message(event.input_sender, '–ü–æ–¥—Ä–æ–±–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞',
                                  file='http://watchlister.ru/upsilon_files/yolo.pdf')
        await client.send_message(event.input_sender, '–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å —Å 2020 –≥–æ–¥–∞',
                                  file=STATS_PATH + 'yolo3.png')
        # await client.send_message(event.input_sender, '–ö–∞–∫ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–∏–º—É–ª—è—Ü–∏–π –ú–æ–Ω—Ç–µ-–ö–∞—Ä–ª–æ?\n'
        #                                               '/instruction19',
        #                           file=STATS_PATH + 'yolo2.png')
        await client.send_message(event.input_sender, '–ö–æ–º—É –∏ –∫–æ–≥–¥–∞ –ø–æ–∫—É–ø–∞—Ç—å Yolo –ø–æ—Ä—Ç—Ñ–µ–ª—å?\n'
                                                      '/instruction24',
                                  buttons=buttons.keyboard_a3_back)

    elif event.data == b'hist_allseasons_s':
        await event.edit()
        await shared.delete_old_message(client, sender_id)
        message = await client.send_message(entity=entity, message='–ó–∞–≥—Ä—É–∑–∫–∞...')
        await client.edit_message(message, 'All Seasons S')
        await client.send_message(event.input_sender, '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ—Ä—Ç—Ñ–µ–ª—è',
                                  file=STATS_PATH + 'all_season_s.png')
        await client.send_message(event.input_sender, ins.all_seasons_s + '\n\n'
                                                                         '–ö–æ–º—É –∏ –∫–æ–≥–¥–∞ –ø–æ–∫—É–ø–∞—Ç—å All Seasons '
                                                                         'S –ø–æ—Ä—Ç—Ñ–µ–ª—å?\n'
                                                                         '/instruction31',
                                  buttons=buttons.keyboard_a3_back)

    elif event.data == b'hist_allseasons_m':
        await event.edit()
        await shared.delete_old_message(client, sender_id)
        message = await client.send_message(entity=entity, message='–ó–∞–≥—Ä—É–∑–∫–∞...')
        await client.edit_message(message, 'All Seasons M')
        await client.send_message(event.input_sender, '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ—Ä—Ç—Ñ–µ–ª—è',
                                  file=STATS_PATH + 'all_season_m.png')
        await client.send_message(event.input_sender, ins.all_seasons_m + '\n\n'
                                                                         '–ö–æ–º—É –∏ –∫–æ–≥–¥–∞ –ø–æ–∫—É–ø–∞—Ç—å All Seasons '
                                                                         'M –ø–æ—Ä—Ç—Ñ–µ–ª—å?\n'
                                                                         '/instruction32',
                                  buttons=buttons.keyboard_a3_back)

    elif event.data == b'hist_allseasons_l':
        await event.edit()
        await shared.delete_old_message(client, sender_id)
        message = await client.send_message(entity=entity, message='–ó–∞–≥—Ä—É–∑–∫–∞...')
        await client.edit_message(message, 'All Seasons L')
        await client.send_message(event.input_sender, '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ—Ä—Ç—Ñ–µ–ª—è',
                                  file=STATS_PATH + 'all_season_l.png')
        await client.send_message(event.input_sender, ins.all_seasons_l + '\n\n'
                                                                         '–ö–æ–º—É –∏ –∫–æ–≥–¥–∞ –ø–æ–∫—É–ø–∞—Ç—å All Seasons '
                                                                         'L –ø–æ—Ä—Ç—Ñ–µ–ª—å?\n'
                                                                         '/instruction33',
                                  buttons=buttons.keyboard_a3_back)


    elif event.data == b'historical_tests':
        await event.edit()
        if old_msg_id is not None:
            await client.edit_message(event.input_sender, old_msg_id, '–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ —Ç–µ—Å—Ç—ã',
                                      buttons=buttons.keyboard_historical_tests)
        else:
            msg = await client.send_message(event.input_sender, '–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ —Ç–µ—Å—Ç—ã',
                                            buttons=buttons.keyboard_historical_tests)
            await shared.save_old_message(sender_id, msg)

    # ============================== –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ =============================
    # elif event.data == b'a4a1':
    #     risk_profile = sql.risk_data_lookup(event.original_update.peer.user_id, engine)
    #     if risk_profile:
    #         await event.edit()
    #         await client.send_message(event.input_sender, '–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ—Ä—Ç—Ñ–µ–ª–∏', buttons=buttons.keyboard_managed_strategies)
    #     else:
    #
    #         message = await client.send_message(entity=entity, message='–ó–∞–≥—Ä—É–∑–∫–∞...')
    #         await client.edit_message(message, ' –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–æ—Ä—Ç—Ñ–µ–ª—è–º —É–ø—Ä–∞–≤–ª—è—é—â–∏—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ '
    #                                            '–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–∞—à —É—Ä–æ–≤–µ–Ω—å —Ç–µ—Ä–ø–∏–º–æ—Å—Ç–∏ –∫ —Ä–∏—Å–∫—É')
    #         await client.send_message(event.input_sender, '–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –≤–∞—Ä–∏–∞–Ω—Ç –¥–ª—è –≤–∞—Å \n \n'
    #                                   + ins.instruction25, buttons=buttons.keyboard_risk_profile)

    elif event.data == b'manager_registration':
        await event.edit()
        await shared.delete_old_message(client, sender_id)
        message = await client.send_message(entity=entity, message='–ó–∞–≥—Ä—É–∑–∫–∞...')
        await client.edit_message(message, '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É–ø—Ä–∞–≤–ª—è—é—â–µ–≥–æ')
        await client.send_message(event.input_sender, ins.managers_form,
                                  buttons=buttons.keyboard_info_back)

    elif event.data == b'advertisement':
        await event.edit()
        await shared.delete_old_message(client, sender_id)
        message = await client.send_message(entity=entity, message='–ó–∞–≥—Ä—É–∑–∫–∞...')
        await client.edit_message(message, '–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏ —Ä–µ–∫–ª–∞–º–∞')
        await client.send_message(event.input_sender, ins.instruction29,
                                  buttons=buttons.keyboard_info_back)

    elif event.data == b'bug_report':
        await event.edit()
        await shared.delete_old_message(client, sender_id)
        message = await client.send_message(entity=entity, message='–ó–∞–≥—Ä—É–∑–∫–∞...')
        await client.edit_message(message, '–°–æ–æ–±—â–∏—Ç—å –æ–± –æ—à–∏–±–∫–µ')
        await client.send_message(event.input_sender, ins.instruction30,
                                  buttons=buttons.keyboard_info_back)

    elif event.data == b'brokers_compare':
        await event.edit()
        await shared.delete_old_message(client, sender_id)
        message = await client.send_message(entity=entity, message='–ó–∞–≥—Ä—É–∑–∫–∞...')
        await client.edit_message(message, '–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –±—Ä–æ–∫–µ—Ä–æ–≤')
        await client.send_message(event.input_sender, ins.brokers,
                                  buttons=buttons.keyboard_info_back)

    elif event.data == b'risk_profile_restart':
        await event.edit()
        reset_user_profiler_data(sender_id)
        await client.send_message(event.input_sender, '–ü—Ä–æ—Ñ–∏–ª—å')
        await send_next_profiler_question(client, sender_id, 0)

    elif event.data == b'my_strategies':
        await event.edit()
        await my_strategies_dynamic_menu(event, client, sender_id, old_msg_id)

    elif event.data == b'strategy_parking':
        await event.edit()
        await shared.delete_old_message(client, sender_id)
        chart_fname = f'{CHARTER_IMAGES_PATH}parking_port_chart_over_TLT.png'
        pie_fname = f'{CHARTER_IMAGES_PATH}parking_portfolio_pie.png'
        await client.send_file(entity, pie_fname)
        await client.send_message(event.input_sender, '–ß–∞—Ä—Ç –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 11:00 (–ú–°–ö)',
                                  file=chart_fname,
                                  buttons=buttons.my_strategies_back)

    elif event.data == b'strategy_allweather':
        await event.edit()
        await shared.delete_old_message(client, sender_id)
        chart_fname = f'{CHARTER_IMAGES_PATH}allweather_port_chart_over_SPY.png'
        pie_fname = f'{CHARTER_IMAGES_PATH}allweather_portfolio_pie.png'
        await client.send_file(entity, pie_fname)
        await client.send_message(event.input_sender, '–ß–∞—Ä—Ç –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 11:00 (–ú–°–ö)',
                                  file=chart_fname,
                                  buttons=buttons.my_strategies_back)

    elif event.data == b'strategy_balanced':
        await event.edit()
        await shared.delete_old_message(client, sender_id)
        chart_fname = f'{CHARTER_IMAGES_PATH}balanced_port_chart_over_QQQ.png'
        pie_fname = f'{CHARTER_IMAGES_PATH}balanced_portfolio_pie.png'
        await client.send_file(entity, pie_fname)
        await client.send_message(event.input_sender, '–ß–∞—Ä—Ç –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 11:00 (–ú–°–ö)',
                                  file=chart_fname,
                                  buttons=buttons.my_strategies_back)

    elif event.data == b'strategy_aggressive':
        await event.edit()
        await shared.delete_old_message(client, sender_id)
        chart_fname = f'{CHARTER_IMAGES_PATH}aggressive_port_chart_over_QQQ.png'
        pie_fname = f'{CHARTER_IMAGES_PATH}aggressive_portfolio_pie.png'
        await client.send_file(entity, pie_fname)
        await client.send_message(event.input_sender, '–ß–∞—Ä—Ç –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 11:00 (–ú–°–ö)',
                                  file=chart_fname,
                                  buttons=buttons.my_strategies_back)

    elif event.data == b'strategy_leveraged':
        await event.edit()
        await shared.delete_old_message(client, sender_id)
        chart_fname = f'{CHARTER_IMAGES_PATH}leveraged_port_chart_over_QQQ.png'
        pie_fname = f'{CHARTER_IMAGES_PATH}leveraged_portfolio_pie.png'
        await client.send_file(entity, pie_fname)
        await client.send_message(event.input_sender, '–ß–∞—Ä—Ç –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 11:00 (–ú–°–ö)',
                                  file=chart_fname,
                                  buttons=buttons.my_strategies_back)

    elif event.data == b'strategy_yolo':
        await event.edit()
        await shared.delete_old_message(client, sender_id)
        chart_fname = f'{CHARTER_IMAGES_PATH}yolo_port_chart_over_SPY.png'
        pie_fname = f'{CHARTER_IMAGES_PATH}yolo_portfolio_pie.png'
        await client.send_file(entity, pie_fname)
        await client.send_message(event.input_sender, '–ß–∞—Ä—Ç –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 11:00 (–ú–°–ö)',
                                  file=chart_fname,
                                  buttons=buttons.my_strategies_back)

    elif event.data == b'strategy_elastic':
        await event.edit()
        await shared.delete_old_message(client, sender_id)
        chart_fname = f'{CHARTER_IMAGES_PATH}elastic_port_chart_over_QQQ.png'
        pie_fname = f'{CHARTER_IMAGES_PATH}elastic_portfolio_pie.png'
        await client.send_file(entity, pie_fname)
        await client.send_message(event.input_sender, '–ß–∞—Ä—Ç –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 11:00 (–ú–°–ö)',
                                  file=chart_fname,
                                  buttons=buttons.my_strategies_back)

    elif event.data == b'strategy_allseasons_s':
        await event.edit()
        await shared.delete_old_message(client, sender_id)
        pie_fname = f'{CHARTER_IMAGES_PATH}all_seasons_s_pie.png'
        await client.send_file(entity, pie_fname)
        await client.send_message(event.input_sender, ins.passive_investments + '\n\n'
                                                                                '–ö–æ–º—É –∏ –∫–æ–≥–¥–∞ –ø–æ–∫—É–ø–∞—Ç—å All Seasons '
                                                                                'S –ø–æ—Ä—Ç—Ñ–µ–ª—å?\n'
                                                                                '/instruction31',
                                  buttons=buttons.my_strategies_back)

    elif event.data == b'strategy_allseasons_m':
        await event.edit()
        await shared.delete_old_message(client, sender_id)
        pie_fname = f'{CHARTER_IMAGES_PATH}all_seasons_m_pie.png'
        await client.send_file(entity, pie_fname)
        await client.send_message(event.input_sender, ins.passive_investments + '\n\n'
                                                                                '–ö–æ–º—É –∏ –∫–æ–≥–¥–∞ –ø–æ–∫—É–ø–∞—Ç—å All Seasons '
                                                                                'M –ø–æ—Ä—Ç—Ñ–µ–ª—å?\n'
                                                                                '/instruction32',
                                  buttons=buttons.my_strategies_back)

    elif event.data == b'strategy_allseasons_l':
        await event.edit()
        await shared.delete_old_message(client, sender_id)
        pie_fname = f'{CHARTER_IMAGES_PATH}all_seasons_l_pie.png'
        await client.send_file(entity, pie_fname)
        await client.send_message(event.input_sender, ins.passive_investments + '\n\n'
                                                                                '–ö–æ–º—É –∏ –∫–æ–≥–¥–∞ –ø–æ–∫—É–ø–∞—Ç—å All Seasons '
                                                                                'L –ø–æ—Ä—Ç—Ñ–µ–ª—å?\n'
                                                                                '/instruction33',
                                  buttons=buttons.my_strategies_back)

    elif event.data == b'strategies_back':
        await event.edit()
        await my_strategies_dynamic_menu(event, client, sender_id, old_msg_id)

    # elif event.data == b'sac1':
    #     await event.edit()
    #     message = await client.send_message(entity=entity, message='–ó–∞–≥—Ä—É–∑–∫–∞...')
    #     await client.edit_message(message, '–ü–æ–¥—Ä–æ–±–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
    #     await client.send_file(entity, STATS_PATH + 'sac_parking.pdf')
    #     await client.send_message(event.input_sender, '–û –¥–æ–≤–µ—Ä–∏—Ç–µ–ª—å–Ω–æ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ \n'
    #                                                   '/instruction26',
    #                               buttons=buttons.keyboard_managed_strategies)
    #
    # elif event.data == b'sac2':
    #     await event.edit()
    #     message = await client.send_message(entity=entity, message='–ó–∞–≥—Ä—É–∑–∫–∞...')
    #     await client.edit_message(message, '–ü–æ–¥—Ä–æ–±–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
    #     await client.send_file(entity, STATS_PATH + 'sac_balanced.pdf')
    #     await client.send_message(event.input_sender, '–û –¥–æ–≤–µ—Ä–∏—Ç–µ–ª—å–Ω–æ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ \n'
    #                                                   '/instruction26',
    #                               buttons=buttons.keyboard_managed_strategies)
    #
    # elif event.data == b'sac3':
    #     await event.edit()
    #     message = await client.send_message(entity=entity, message='–ó–∞–≥—Ä—É–∑–∫–∞...')
    #     await client.edit_message(message, '–ü–æ–¥—Ä–æ–±–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
    #     await client.send_file(entity, STATS_PATH + 'sac_growth.pdf')
    #     await client.send_message(event.input_sender, '–û –¥–æ–≤–µ—Ä–∏—Ç–µ–ª—å–Ω–æ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ \n'
    #                                                   '/instruction26',
    #                               buttons=buttons.keyboard_managed_strategies)
    # ============================== –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è =============================
    elif event.data == b'forw2':
        await event.edit()
        await client.send_message(entity, ins.hello_2, file=f'{PROJECT_HOME_DIR}/html/hello_2.jpg',
                                  buttons=buttons.keyboard_forw3)
    elif event.data == b'forw3':
        await event.edit()
        await client.send_message(entity, ins.hello_3, file=f'{PROJECT_HOME_DIR}/html/hello_3.jpg',
                                  buttons=buttons.keyboard_forw4)
    elif event.data == b'forw4':
        await event.edit()
        await client.send_message(entity, ins.hello_4, file=f'{PROJECT_HOME_DIR}/html/hello_5.jpg',
                                  buttons=buttons.keyboard_forw7)
    # elif event.data == b'forw5':
    #     await event.edit()
    #     await client.send_message(entity, ins.hello_5, file=f'{PROJECT_HOME_DIR}/html/hello_5.jpg',
    #                               buttons=buttons.keyboard_forw6)
    # elif event.data == b'forw6':
    #     await event.edit()
    #     await client.send_message(entity, ins.hello_6, file=f'{PROJECT_HOME_DIR}/html/hello_6.jpg',
    #                               buttons=buttons.keyboard_forw7)
    elif event.data == b'forw7':
        await event.edit()
        await client.send_message(entity, ins.hello_7, file=f'{PROJECT_HOME_DIR}/html/hello_7.jpg',
                                  buttons=buttons.keyboard_forw7a)
    elif event.data == b'forw7a':
        await event.edit()
        await client.send_message(entity, ins.hello_7a, file=f'{PROJECT_HOME_DIR}/html/hello_6.jpg',
                                  buttons=buttons.keyboard_forw8)
    elif event.data == b'forw8':
        await event.edit()
        await client.send_message(entity=entity, message='__–ö–∞–∫–æ–π –ø—É—Ç—å –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –¥–ª—è —Ç–µ–±—è?__',
                                  buttons=buttons.keyboard_start)
        await client.send_message(entity, ins.hello_8, file=f'{PROJECT_HOME_DIR}/html/hello_8.jpg',
                                  buttons=buttons.keyboard_forw9)
    elif event.data == b'forw9':
        await event.edit()
        await send_next_profiler_question(client, sender_id, 0)

    # ============================== –û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã =============================
    # elif event.data == b'a6a1':
    #     await event.edit()
    #     message = await client.send_message(entity=entity, message='–ó–∞–≥—Ä—É–∑–∫–∞...')
    #     await client.edit_message(message, '–û—Å–Ω–æ–≤—ã –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è')
    #     await client.send_message(event.input_sender, '–û—Å–Ω–æ–≤—ã –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è /instruction20',
    #                               buttons=buttons.keyboard_a6_back)
    # elif event.data == b'a6a2':
    #     await event.edit()
    #     message = await client.send_message(entity=entity, message='–ó–∞–≥—Ä—É–∑–∫–∞...')
    #     await client.edit_message(message, '–ö–∞–∫ —Å–æ–±—Ä–∞—Ç—å —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –ø–æ—Ä—Ç—Ñ–µ–ª—å')
    #     await client.send_message(event.input_sender, '–ö–∞–∫ —Å–æ–±—Ä–∞—Ç—å —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –ø–æ—Ä—Ç—Ñ–µ–ª—å /instruction21',
    #                               buttons=buttons.keyboard_a6_back)
    # elif event.data == b'a6a3':
    #     await event.edit()
    #     message = await client.send_message(entity=entity, message='–ó–∞–≥—Ä—É–∑–∫–∞...')
    #     await client.edit_message(message, '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è')
    #     await client.send_message(event.input_sender, '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è /instruction22',
    #                               buttons=buttons.keyboard_a6_back)
    # elif event.data == b'a6a-1':
    #     await event.edit()
    #     await client.send_message(event.input_sender, '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ', buttons=buttons.keyboard_a6)

    # ============================== –ê–≥—Ä–µ–≥–∞—Ç–æ—Ä –Ω–æ–≤–æ—Å—Ç–µ–π =============================
    elif event.data == b'a9a1':
        if old_msg_id is not None:
            await client.edit_message(entity, old_msg_id, '–ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏')
            shared.pop_old_msg_id(sender_id)
        else:
            await client.send_message(entity, '–ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏')
        msg1 = fin_news(blogs=False)
        await client.send_message(entity, msg1, buttons=buttons.keyboard_a8_back)

    elif event.data == b'a9a2':
        if old_msg_id is not None:
            await client.edit_message(entity, old_msg_id, '–ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ –≤ –±–ª–æ–≥–∞—Ö')
            shared.pop_old_msg_id(sender_id)
        else:
            await client.send_message(entity, '–ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ –≤ –±–ª–æ–≥–∞—Ö')
        msg2 = fin_news(blogs=True)
        await client.send_message(entity, msg2, buttons=buttons.keyboard_a8_back)

    elif event.data == b'a8a-1':
        await event.edit()
        msg = await client.send_message(event.input_sender, '–ê–≥—Ä–µ–≥–∞—Ç–æ—Ä –Ω–æ–≤–æ—Å—Ç–µ–π', buttons=buttons.keyboard_a8)
        await shared.save_old_message(sender_id, msg)

    elif event.data == b'financial_analysis':
        await event.edit()
        await shared.delete_old_message(client, sender_id)
        await client.send_message(event.input_sender, message=ins.instruction21,
                                  buttons=buttons.keyboard_screener_back)

    elif event.data == b'ticker_news':
        await event.edit()
        await shared.delete_old_message(client, sender_id)
        await client.send_message(event.input_sender, message=ins.instruction20,
                                  buttons=buttons.keyboard_screener_back)

    # ============================== –û—Å–Ω–æ–≤–Ω—ã–µ –º–∞–∫—Ä–æ –¥–∞–Ω–Ω—ã–µ =============================
    elif event.data == b'cm1':
        await event.edit()
        await shared.delete_old_message(client, sender_id)
        await client.send_message(entity=entity, message='–ü—Ä–æ–≥–Ω–æ–∑ –ø—Ä–æ—Ü–µ–Ω—Ç–Ω–æ–π —Å—Ç–∞–≤–∫–∏ –≤ –°–®–ê')
        await client.send_file(entity, IMAGES_OUT_PATH + 'Interest Rate.png')
        await client.send_message(event.input_sender, '–ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞ \n /instruction10',
                                  buttons=buttons.keyboard_core_macro_back)
    elif event.data == b'cm2':
        await event.edit()
        await shared.delete_old_message(client, sender_id)
        await client.send_message(entity=entity, message='–ü—Ä–æ–≥–Ω–æ–∑ —É—Ä–æ–≤–Ω—è –∏–Ω—Ñ–ª—è—Ü–∏–∏ –≤ –°–®–ê')
        await client.send_file(entity, IMAGES_OUT_PATH + 'Inflation Rate.png')
        await client.send_message(event.input_sender, '–£—Ä–æ–≤–µ–Ω—å –∏–Ω—Ñ–ª—è—Ü–∏–∏ \n /instruction11',
                                  buttons=buttons.keyboard_core_macro_back)
    elif event.data == b'cm3':
        await event.edit()
        await shared.delete_old_message(client, sender_id)
        await client.send_message(entity=entity, message='–ü—Ä–æ–≥–Ω–æ–∑ —É—Ä–æ–≤–Ω—è –±–µ–∑—Ä–∞–±–æ—Ç–∏—Ü—ã –≤ –°–®–ê')
        await client.send_file(entity, IMAGES_OUT_PATH + 'Unemployment Rate.png')
        await client.send_message(event.input_sender, '–£—Ä–æ–≤–µ–Ω—å –±–µ–∑—Ä–∞–±–æ—Ç–∏—Ü—ã \n /instruction13',
                                  buttons=buttons.keyboard_core_macro_back)
    elif event.data == b'cm4':
        await event.edit()
        await shared.delete_old_message(client, sender_id)
        await client.send_message(entity=entity, message='–ü—Ä–æ–≥–Ω–æ–∑ –∏–Ω–¥–µ–∫—Å–∞ PMI –≤ –°–®–ê')
        await client.send_file(entity, IMAGES_OUT_PATH + 'Composite PMI.png')
        await client.send_message(event.input_sender, '–ö–æ–º–ø–æ–∑–∏—Ç–Ω—ã–π –∏–Ω–¥–µ–∫—Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –ø–æ –∑–∞–∫—É–ø–∫–∞–º \n /instruction12',
                                  buttons=buttons.keyboard_core_macro_back)
    elif event.data == b'cm-1':
        await event.edit()
        msg = await client.send_message(event.input_sender, '–û—Å–Ω–æ–≤–Ω—ã–µ –º–∞–∫—Ä–æ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã',
                                        buttons=buttons.keyboard_core_macro)
        await shared.save_old_message(sender_id, msg)

    elif event.data == b'cm-2':
        await event.edit()
        if old_msg_id is not None:
            await client.edit_message(event.input_sender, old_msg_id, '–ê–Ω–∞–ª–∏–∑ –°–®–ê', buttons=buttons.keyboard_a1)
        else:
            msg = await client.send_message(event.input_sender, '–ê–Ω–∞–ª–∏–∑ –°–®–ê', buttons=buttons.keyboard_a1)
            await shared.save_old_message(sender_id, msg)

    elif event.data == b'cm-3':
        await event.edit()
        if old_msg_id is not None:
            await client.edit_message(event.input_sender, old_msg_id, '–ü–æ–¥—Ä–æ–±–Ω—ã–π –∞–Ω–∞–ª–∏–∑',
                                      buttons=buttons.keyboard_us_market)
        else:
            msg = await client.send_message(event.input_sender, '–ü–æ–¥—Ä–æ–±–Ω—ã–π –∞–Ω–∞–ª–∏–∑', buttons=buttons.keyboard_us_market)
            await shared.save_old_message(sender_id, msg)

    elif event.data == b'cm-4':
        await event.edit()
        if old_msg_id is not None:
            await client.edit_message(event.input_sender, old_msg_id, '–ê–Ω–∞–ª–∏–∑ –°–®–ê',
                                      buttons=buttons.keyboard_us_analysis)
        else:
            msg = await client.send_message(event.input_sender, '–ê–Ω–∞–ª–∏–∑ –°–®–ê', buttons=buttons.keyboard_us_analysis)
            await shared.save_old_message(sender_id, msg)

    elif event.data == b'screener_back':
        await event.edit()
        if old_msg_id is not None:
            await client.edit_message(event.input_sender, old_msg_id, '–°–∫—Ä–∏–Ω–µ—Ä –∞–∫—Ü–∏–π',
                                      buttons=buttons.keyboard_screener)
        else:
            msg = await client.send_message(event.input_sender, '–°–∫—Ä–∏–Ω–µ—Ä –∞–∫—Ü–∏–π', buttons=buttons.keyboard_screener)
            await shared.save_old_message(sender_id, msg)

    elif event.data == b'hist_back':
        await event.edit()
        if old_msg_id is not None:
            await client.edit_message(event.input_sender, old_msg_id, '–ú–æ–π –ø–æ—Ä—Ç—Ñ–µ–ª—å\n'
                                                                      '–ö–∞–∫ –∫—É–ø–∏—Ç—å –ø–æ—Ä—Ç—Ñ–µ–ª—å? - /instruction27\n'
                                                                      '–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –¥–µ–ø–æ–∑–∏—Ç - /mindepo',
                                      buttons=buttons.keyboard_portfolio)
        else:
            msg = await client.send_message(event.input_sender, '–ú–æ–π –ø–æ—Ä—Ç—Ñ–µ–ª—å\n'
                                                                '–ö–∞–∫ –∫—É–ø–∏—Ç—å –ø–æ—Ä—Ç—Ñ–µ–ª—å? - /instruction27\n'
                                                                '–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –¥–µ–ø–æ–∑–∏—Ç - /mindepo',
                                            buttons=buttons.keyboard_portfolio)
            await shared.save_old_message(sender_id, msg)

    elif event.data == b'cm-51':
        await event.edit()
        msg = await client.send_message(event.input_sender, '–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ —Ç–µ—Å—Ç—ã', buttons=buttons.keyboard_historical_tests)
        await shared.save_old_message(sender_id, msg)

    # elif event.data == b'cm-6':
    #     await event.edit()

    #     msg = await client.send_message(event.input_sender, '–°–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ', buttons=buttons.keyboard_relations)
    #     await shared.save_old_message(sender_id, msg)
    elif event.data == b'portfolio_back':
        await event.edit()
        if old_msg_id is not None:
            await client.edit_message(event.input_sender, old_msg_id, '–ú–æ–π –ø–æ—Ä—Ç—Ñ–µ–ª—å\n'
                                                                      '–ö–∞–∫ –∫—É–ø–∏—Ç—å –ø–æ—Ä—Ç—Ñ–µ–ª—å? - /instruction27\n'
                                                                      '–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –¥–µ–ø–æ–∑–∏—Ç - /mindepo',
                                      buttons=buttons.keyboard_portfolio)
        else:
            msg = await client.edit_message(event.input_sender, old_msg_id, '–¢–≤–æ–∏ –ø–æ—Ä—Ç—Ñ–µ–ª–∏',
                                            buttons=buttons.keyboard_portfolio)
            await shared.save_old_message(sender_id, msg)

    elif event.data == b'z2':
        await event.edit()
        if old_msg_id is not None:
            await client.edit_message(event.input_sender, old_msg_id,
                                      '–¢—ã –º–æ–∂–µ—à—å –ø–æ–ø—Ä–æ—Å–∏—Ç—å –¥—Ä—É–≥–∞ –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∏ –ø–æ–ª—É—á–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—É—é'
                                      ' –ø–æ–¥–ø–∏—Å–∫—É. '
                                      '–ü—Ä–æ—â–µ –≤—Å–µ–≥–æ —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å —á–µ—Ä–µ–∑ –≥—Ä—É–ø–ø–æ–≤—ã–µ —á–∞—Ç—ã' + '\n' +
                                      f'[https://t.me/UpsilonBot?start={sender_id}]'
                                      f'(https://t.me/UpsilonBot?start={sender_id})',
                                      buttons=buttons.keyboard_friend_back)
        else:
            msg = await client.send_message(event.input_sender,
                                            '–¢—ã –º–æ–∂–µ—à—å –ø–æ–ø—Ä–æ—Å–∏—Ç—å –¥—Ä—É–≥–∞ –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∏ –ø–æ–ª—É—á–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—É—é'
                                            ' –ø–æ–¥–ø–∏—Å–∫—É. '
                                            '–ü—Ä–æ—â–µ –≤—Å–µ–≥–æ —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å —á–µ—Ä–µ–∑ –≥—Ä—É–ø–ø–æ–≤—ã–µ —á–∞—Ç—ã' + '\n' +
                                            f'[https://t.me/UpsilonBot?start={sender_id}]'
                                            f'(https://t.me/UpsilonBot?start={sender_id})',
                                            buttons=buttons.keyboard_friend_back)
            await shared.save_old_message(sender_id, msg)

    elif event.data == b'friend_back':
        await event.edit()
        # await client.send_message(event.input_sender, '–ü—Ä–æ—Ñ–∏–ª—å')
        await menu.profile_menu(event, client, engine=engine)

    elif event.data == b'info_back':
        await event.edit()
        msg = await client.send_message(event.input_sender, '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', buttons=buttons.keyboard_info)
        await shared.save_old_message(sender_id, msg)

    elif event.data == b'risk_reset':
        await event.edit()
        if old_msg_id is not None:
            msg = await client.edit_message(event.input_sender, old_msg_id, ins.instruction25,
                                            buttons=buttons.keyboard_reset)
        else:
            msg = await client.send_message(event.input_sender, ins.instruction25, buttons=buttons.keyboard_reset)
            await shared.save_old_message(sender_id, msg)

    elif event.data == b'reset_yes':
        await event.edit()
        reset_user_profiler_data(sender_id)
        await client.send_message(event.input_sender, '–ü—Ä–æ—Ñ–∏–ª—å')
        await send_next_profiler_question(client, sender_id, 0)

    elif event.data == b'reset_no':
        await event.edit()
        await menu.profile_menu(event, client, engine=engine)

    # ============================== Subscriptions =============================
    elif event.data == b'z1':
        await event.edit()
        await client.send_message(event.input_sender, '–£—Ä–æ–≤–µ–Ω—å –ø–æ–¥–ø–∏—Å–æ–∫', buttons=buttons.keyboard_core_subscriptions)
    elif event.data == b'kcs0':
        await event.edit()
        await client.send_file(event.input_sender, shared.SUBSCRIBES[shared.TARIFF_COMPARE_ID].get_img_path())
    elif event.data == b'kcs1':
        await event.edit()
        await client.send_file(event.input_sender, shared.SUBSCRIBES[shared.TARIFF_START_ID].get_img_path())
        await client.send_message(event.input_sender, shared.SUBSCRIBES[shared.TARIFF_START_ID].get_describe(),
                                  buttons=buttons.keyboard_subscription_start)
    elif event.data == b'kcs2':
        await client.send_file(event.input_sender, shared.SUBSCRIBES[shared.TARIFF_BASE_ID].get_img_path())
        await client.send_message(event.input_sender, shared.SUBSCRIBES[shared.TARIFF_BASE_ID].get_describe(),
                                  buttons=buttons.keyboard_subscription_base)
    elif event.data == b'kcs3':
        await client.send_file(event.input_sender, shared.SUBSCRIBES[shared.TARIFF_ADVANCED_ID].get_img_path())
        await client.send_message(event.input_sender, shared.SUBSCRIBES[shared.TARIFF_ADVANCED_ID].get_describe(),
                                  buttons=buttons.keyboard_subscription_advanced)
    elif event.data == b'kcs4':
        await client.send_file(event.input_sender, shared.SUBSCRIBES[shared.TARIFF_PROFESSIONAL_ID].get_img_path())
        await client.send_message(event.input_sender, shared.SUBSCRIBES[shared.TARIFF_PROFESSIONAL_ID].get_describe(),
                                  buttons=buttons.keyboard_subscription_professional)
    elif event.data == b'kcs-1':
        await menu.profile_menu(event, client, engine)
    #   TODO –¥–æ–±–∞–≤–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–æ–∫
    #   TODO –¥–æ–±–∞–≤–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–æ–∫
    elif event.data == b'kss1' or event.data == b'kss2' or event.data == b'kss3' or event.data == b'kss4':
        global PAYMENT_AGGREGATOR
        if PAYMENT_AGGREGATOR is None:
            PAYMENT_AGGREGATOR = PaymentAgregator()
            PAYMENT_AGGREGATOR.creator('Free Kassa')
        aggregator_status = None
        global PAYMENT_AGGREGATOR_TIMER
        if PAYMENT_AGGREGATOR_TIMER is not None:
            delta = time.time() - PAYMENT_AGGREGATOR_TIMER
            if delta >= 10:
                aggregator_status = PAYMENT_AGGREGATOR.get_status()
            else:
                time.sleep(10 - delta)
                aggregator_status = PAYMENT_AGGREGATOR.get_status()
        else:
            PAYMENT_AGGREGATOR_TIMER = time.time()
            aggregator_status = PAYMENT_AGGREGATOR.get_status()
        # debug(aggregator_status)
        if aggregator_status == 'error':
            # debug("Error description:" + PAYMENT_AGGREGATOR.get_last_error())
            await client.send_message(event.input_sender, '–£–ø—Å. –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫.',
                                      buttons=buttons.keyboard_subscription_start)
            await event.edit()
        else:
            # debug("user_id=" + str(sender_id.user_id))
            order_id = str(uuid.uuid4()).replace('-', '')
            debug("OrderId:" + order_id)
            summa = ""
            kbd_label = ""
            if event.data == b'kss1':
                summa = str(shared.SUBSCRIBES[shared.TARIFF_START_ID].get_cost())
                kbd_label = "–û–ø–ª–∞—Ç–∏—Ç—å ($" + str(shared.SUBSCRIBES[shared.TARIFF_START_ID].get_cost()) + ')'
            elif event.data == b'kss2':
                summa = str(shared.SUBSCRIBES[shared.TARIFF_BASE_ID].get_cost())
                kbd_label = "–û–ø–ª–∞—Ç–∏—Ç—å ($" + str(shared.SUBSCRIBES[shared.TARIFF_BASE_ID].get_cost()) + ')'
            elif event.data == b'kss3':
                summa = str(shared.SUBSCRIBES[shared.TARIFF_ADVANCED_ID].get_cost())
                kbd_label = "–û–ø–ª–∞—Ç–∏—Ç—å ($" + str(shared.SUBSCRIBES[shared.TARIFF_ADVANCED_ID].get_cost()) + ')'
            elif event.data == b'kss2':
                summa = str(shared.SUBSCRIBES[shared.TARIFF_PROFESSIONAL_ID].get_cost())
                kbd_label = "–û–ø–ª–∞—Ç–∏—Ç—å ($" + str(shared.SUBSCRIBES[shared.TARIFF_PROFESSIONAL_ID].get_cost()) + ')'

            debug("Summa:" + summa)
            payment_link = PAYMENT_AGGREGATOR.get_payment_link(order_id, summa)
            debug(payment_link)
            kbd_payment_button = buttons.generate_payment_button(kbd_label, payment_link)

            paymsg = await client.send_message(event.input_sender,
                                               '–î–ª—è –æ–ø–ª–∞—Ç—ã —Ç–∞—Ä–∏—Ñ–∞ ' \
                                               + shared.SUBSCRIBES[shared.TARIFF_START_ID].get_name() \
                                               + '–Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –û–ø–ª–∞—Ç–∏—Ç—å\n'
                                                 '(–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –æ–ø–ª–∞—Ç–µ [—Ç—É—Ç](https://telegra.ph/Rrrtt-10-13)! )',
                                               link_preview=True,
                                               buttons=kbd_payment_button)
            await event.edit()
            msg_id = utils.get_message_id(paymsg)
            order_type = 'subscription'
            shared.ORDER_MAP[order_id] = (sender_id, msg_id)
            dt = datetime.now()
            dt_int = shared.datetime2int(dt)
            await sql.insert_into_payment_message(order_id, sender_id, msg_id, dt_int, engine)


async def send_next_profiler_question(client, user_id, curr_num):
    _poll_id = None
    _question = None
    _answers = None
    _poll_id = get_next_id()
    old_msg_id = await shared.get_old_msg_id(user_id)
    if curr_num == 0:
        _question = "–¢–≤–æ—è —Ü–µ–ª—å:"
        _answers = [PollAnswer("–û–±—â–µ–µ –±–ª–∞–≥–æ—Å–æ—Å—Ç–æ—è–Ω–∏–µ", b'1'),
                    PollAnswer("–ë–æ–ª—å—à–∏–µ –ø–æ–∫—É–ø–∫–∏ - –¥–æ–º, –º–∞—à–∏–Ω–∞", b'2'),
                    PollAnswer("–£—á–µ–±–∞ –¥–µ—Ç–µ–π, —Å–≤–∞–¥—å–±–∞", b'3'),
                    PollAnswer("–ü–µ–Ω—Å–∏—è", b'4'),
                    PollAnswer("–ü–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥", b'5')]
    if curr_num == 1:
        _question = "–ß—Ç–æ –∏–∑ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω–æ–≥–æ –æ–ø–∏—Å—ã–≤–∞–µ—Ç —Ç–≤–æ—é —Å–∏—Ç—É–∞—Ü–∏—é:"
        _answers = [PollAnswer('–Ø —Ä–µ–∑–∏–¥–µ–Ω—Ç –°–ù–ì, –º–æ–π –±—Ä–æ–∫–µ—Ä –∏–∑ –°–ù–ì', b'1'),
                    PollAnswer('–Ø —Ä–µ–∑–∏–¥–µ–Ω—Ç –°–ù–ì, –º–æ–π –±—Ä–æ–∫–µ—Ä –∏–∑ –ï–°', b'2'),
                    PollAnswer('–Ø —Ä–µ–∑–∏–¥–µ–Ω—Ç –°–ù–ì, –º–æ–π –±—Ä–æ–∫–µ—Ä –∏–∑ –°–®–ê', b'3'),
                    PollAnswer('–Ø —Ä–µ–∑–∏–¥–µ–Ω—Ç –ï–°, –º–æ–π –±—Ä–æ–∫–µ—Ä –∏–∑ –°–®–ê', b'4'),
                    PollAnswer('–Ø —Ä–µ–∑–∏–¥–µ–Ω—Ç –ï–°, –º–æ–π –±—Ä–æ–∫–µ—Ä –∏–∑ –ï–°', b'5'),
                    PollAnswer('–Ø —Ä–µ–∑–∏–¥–µ–Ω—Ç –°–®–ê, –º–æ–π –±—Ä–æ–∫–µ—Ä –∏–∑ –°–®–ê', b'6'),
                    PollAnswer('–£ –º–µ–Ω—è –Ω–µ—Ç –±—Ä–æ–∫–µ—Ä—Å–∫–æ–≥–æ —Å—á–µ—Ç–∞ –∏ —è —Ä–µ–∑–∏–¥–µ–Ω—Ç –°–ù–ì', b'7')]
    if curr_num == 2:
        _question = "–ï—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –±—Ä–æ–∫–µ—Ä—Å–∫–∏–π —Å—á–µ—Ç, –º–æ–∂–µ—à—å –ª–∏ —Ç—ã –ø–æ–∫—É–ø–∞—Ç—å –ê–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∏–µ ETF-—Ñ–æ–Ω–¥—ã?"
        _answers = [PollAnswer('–î–∞', b'1'),
                    PollAnswer('–ù–µ—Ç', b'2'),
                    PollAnswer('–ù–µ –∑–Ω–∞—é', b'3')]
    if curr_num == 3:
        _question = "–¢—ã —Ö–æ—á–µ—à—å –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–±–æ–¥–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞ –∏–ª–∏ –æ–Ω–∏ –º–æ–≥—É—Ç –≤—Å–∫–æ—Ä–µ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—å—Å—è?"
        _answers = [PollAnswer('–î–∞, —ç—Ç–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ –º–æ–≥—É—Ç –ø–æ–Ω–∞–¥–æ–±–∏—Ç—å—Å—è', b'1'),
                    PollAnswer('–ù–µ—Ç, —ç—Ç–æ —Å–≤–æ–±–æ–¥–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞', b'2')]
    if curr_num == 4:
        _question = "–ü–ª–∞–Ω–∏—Ä—É–µ—à—å –ª–∏ —Ç—ã –≤—ã–≤–æ–¥–∏—Ç—å –¥–µ–Ω—å–≥–∏ —Å –±—Ä–æ–∫–µ—Ä—Å–∫–æ–≥–æ —Å—á–µ—Ç–∞?"
        _answers = [PollAnswer('–î–∞, —Ä–µ–≥—É–ª—è—Ä–Ω–æ', b'1'),
                    PollAnswer('–ò–Ω–æ–≥–¥–∞, –ø–æ —Å–ª—É—á–∞—é', b'2'),
                    PollAnswer('–ù–µ—Ç', b'3')]
    if curr_num == 5:
        _question = "–ë—É–¥–µ—à—å –ª–∏ —Ç—ã –¥–µ–ª–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–ª–æ–∂–µ–Ω–∏—è?"
        _answers = [PollAnswer('–î–∞, —Ä–µ–≥—É–ª—è—Ä–Ω–æ', b'1'),
                    PollAnswer('–ò–Ω–æ–≥–¥–∞, –ø–æ —Å–ª—É—á–∞—é', b'2'),
                    PollAnswer('–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –≤–ª–æ–∂–µ–Ω–∏–π –Ω–µ –ø–ª–∞–Ω–∏—Ä—É—é', b'3')]
    if curr_num == 6:
        _question = "–°—Ä–æ–∫ –≤–ª–æ–∂–µ–Ω–∏–π:"
        _answers = [PollAnswer('–ú–µ–Ω—å—à–µ –≥–æ–¥–∞', b'1'),
                    PollAnswer('1-3 –≥–æ–¥–∞', b'2'),
                    PollAnswer('3-5 –ª–µ—Ç', b'3'),
                    PollAnswer('5-10 –ª–µ—Ç', b'4'),
                    PollAnswer('–ë–æ–ª–µ–µ 10 –ª–µ—Ç', b'5')]
    if curr_num == 7:
        _question = "–ö–∞–∫ —á–∞—Å—Ç–æ —Ç—ã –±—É–¥–µ—à—å –∑–∞–Ω–∏–º–∞—Ç—å—Å—è –ø–æ—Ä—Ç—Ñ–µ–ª–µ–º?"
        _answers = [PollAnswer('–ï–∂–µ–¥–Ω–µ–≤–Ω–æ', b'1'),
                    PollAnswer('–ï–∂–µ–º–µ—Å—è—á–Ω–æ', b'2'),
                    PollAnswer('–ö–æ–≥–¥–∞ –Ω—É–∂–Ω–æ', b'3'),
                    PollAnswer('–ü–æ —Å–ª—É—á–∞—é', b'4')]
    if curr_num == 8:
        _question = "–ö–∞–∫—É—é –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å –æ–∂–∏–¥–∞–µ—à—å?"
        _answers = [PollAnswer('–í—ã—à–µ —É—Ä–æ–≤–Ω—è –∏–Ω—Ñ–ª—è—Ü–∏–∏', b'1'),
                    PollAnswer('10%', b'2'),
                    PollAnswer('10-15%', b'3'),
                    PollAnswer('15-20%', b'4'),
                    PollAnswer('–ë–æ–ª–µ–µ 20%', b'5')]
    if curr_num == 9:
        _question = "–ü–æ—Ç–µ—Ä—è –∫–∞–∫–æ–π —á–∞—Å—Ç–∏ —Ç–≤–æ–µ–≥–æ –≤–∫–ª–∞–¥–∞ –±—É–¥–µ—Ç –∫–∞—Ç–∞—Å—Ç—Ä–æ—Ñ–∏—á–µ—Å–∫–æ–π?"
        _answers = [PollAnswer('–û—Ç -5% –¥–æ -10%', b'1'),
                    PollAnswer('–û—Ç -10% –¥–æ -20%', b'2'),
                    PollAnswer('–û—Ç -20% –¥–æ -35%', b'3'),
                    PollAnswer('–û—Ç -35% –¥–æ -50%', b'4'),
                    PollAnswer('–î–æ -75', b'5')]
    if curr_num == 10:
        _question = "–£–±—ã—Ç–æ–∫ –≤ 20% –æ—Ç —Ä–∞–∑–º–µ—Ä–∞ —Ç–≤–æ–µ–≥–æ –≤–∫–ª–∞–¥–∞ —ç—Ç–æ:"
        _answers = [PollAnswer('–ù–∏—á–µ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–≥–æ', b'1'),
                    PollAnswer('–¢–µ—Ä–ø–∏–º–æ', b'2'),
                    PollAnswer('–ù–µ –ø—Ä–∏–µ–º–ª–µ–º–æ', b'3')]
    if curr_num == 11:
        _question = "–¢–≤–æ–∏ –¥–µ–π—Å—Ç–≤–∏—è –≤–æ –≤—Ä–µ–º—è –ø—Ä–æ—Å–∞–¥–∫–∏ –Ω–∞ —Ä—ã–Ω–∫–µ –≤ 15%:"
        _answers = [PollAnswer('–ù–µ –∑–Ω–∞—é', b'1'),
                    PollAnswer('–ù–∏—á–µ–≥–æ –Ω–µ —Å–¥–µ–ª–∞—é', b'2'),
                    PollAnswer('–ü—Ä–æ–¥–∞–º –≤—Å–µ', b'3'),
                    PollAnswer('–ü—Ä–æ–¥–∞–º —á–∞—Å—Ç—å', b'4'),
                    PollAnswer('–ü—Ä–æ–¥–∞–º —É–±—ã—Ç–æ—á–Ω—ã–µ', b'5'),
                    PollAnswer('–ü—Ä–æ–¥–∞–º –ø—Ä–∏–±—ã–ª—å–Ω—ã–µ', b'6'),
                    PollAnswer('–î–æ–∫—É–ø–ª—é', b'7'),
                    PollAnswer('–ß—Ç–æ-—Ç–æ –ø—Ä–æ–¥–∞–º –∏ —á—Ç–æ-—Ç–æ –¥–æ–∫—É–ø–ª—é', b'8')]
    if curr_num == 12:
        _question = "–¢—ã –ø—Ä–µ–¥–ø–æ—á–µ–ª –±—ã –∞–∫—Ü–∏–∏:"
        _answers = [PollAnswer('–° –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å—é –≤ 20% –≥–æ–¥–æ–≤—ã—Ö, –Ω–æ —Ä–∞–Ω–µ–µ —ç—Ç–∏ –∞–∫—Ü–∏–∏ –ø–∞–¥–∞–ª–∏ –Ω–∞ -50%', b'1'),
                    PollAnswer('–° –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å—é –≤ 15% –≥–æ–¥–æ–≤—ã—Ö, –Ω–æ —Ä–∞–Ω–µ–µ —ç—Ç–∏ –∞–∫—Ü–∏–∏ –ø–∞–¥–∞–ª–∏ –Ω–∞ -20%', b'2'),
                    PollAnswer('–° –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å—é –≤ 150% –≥–æ–¥–æ–≤—ã—Ö, –Ω–æ —Ä–∞–Ω–µ–µ —ç—Ç–∏ –∞–∫—Ü–∏–∏ –ø–∞–¥–∞–ª–∏ –Ω–∞ -70%', b'3'),
                    PollAnswer('–° –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å—é –≤ 10% –≥–æ–¥–æ–≤—ã—Ö, –Ω–æ —Ä–∞–Ω–µ–µ —ç—Ç–∏ –∞–∫—Ü–∏–∏ –ø–∞–¥–∞–ª–∏ –Ω–∞ -10%', b'4')]
    if curr_num == 13:
        _question = "–¢—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—à—å:"
        _answers = [PollAnswer('–ì–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ 50% –æ—Ç —Ç–≤–æ–µ–π —Å—É–º–º—ã —á–µ—Ä–µ–∑ 3 –≥–æ–¥–∞', b'1'),
                    PollAnswer('35% - 80% —á–µ—Ä–µ–∑  5–ª–µ—Ç, –Ω–æ –±–µ–∑ –≥–∞—Ä–∞–Ω—Ç–∏–π, –Ω–æ –Ω–µ –º–µ–Ω–µ–µ 35%', b'2')]
    poll = Poll(id=_poll_id,
                question=_question,
                answers=_answers)
    input_media_poll = InputMediaPoll(poll)
    poll_msg = None
    if old_msg_id is not None:
        await shared.delete_old_message(client, user_id)
        poll_msg = await client.send_message(user_id, file=input_media_poll)
        await shared.save_old_message(user_id, poll_msg)
        shared.set_old_msg_poll(user_id, True)
        pass
    else:
        poll_msg = await client.send_message(user_id, file=input_media_poll)
    real_poll_id = poll_msg.media.poll.id
    update_user_profiler_map(user_id, real_poll_id, curr_num)
    if curr_num == 0:
        await shared.save_old_message(user_id, poll_msg)
        shared.set_old_msg_poll(user_id, True)


async def polls_handler(update, client):
    poll_id = update.poll_id
    user_id, qnumber = get_userid_by_pollid(poll_id)
    if user_id is not None:
        answer_res = None
        votes_list = update.results.results
        for vote in votes_list:
            if vote.voters == 1:
                answer_res = shared.get_prifiler_score(qnumber, vote.option)
                break
        increment_final_score(user_id, answer_res)
        if qnumber < 13:
            await send_next_profiler_question(client, user_id, qnumber + 1)
        else:
            old_msg_id = await shared.get_old_msg_id(user_id)
            shared.set_old_msg_poll(user_id, False)
            if old_msg_id is not None:
                await shared.delete_old_message(client, user_id)
                main_menu_msg = await client.send_message(user_id, 'üìÅ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', buttons=buttons.keyboard_0)
                await shared.save_old_message(user_id, main_menu_msg)
            else:
                menu_msg = await client.send_message(user_id, 'üìÅ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', buttons=buttons.keyboard_0)
                await shared.delete_old_message(client, user_id)
                await shared.save_old_message(user_id, menu_msg)


async def my_strategies_dynamic_menu(event, client, sender_id, old_msg_id):
    # –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –Ω–µ –¥–æ –∫–æ–Ω—Ü–∞ –ø—Ä–æ—à–µ–ª –ø—Ä–æ—Ñ–∞–ª–∏–Ω–≥
    # - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å
    if old_msg_id is not None:
        if not is_user_profile_done(sender_id):
            await client.edit_message(event.input_sender, old_msg_id,
                                      '–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å —Ä–∏—Å–∫–∞', buttons=buttons.keyboard_restart_poll)
        else:
            final_profile_score = get_final_score(sender_id)
            if final_profile_score <= -9:
                await client.edit_message(event.input_sender, old_msg_id,
                                          '–¢–≤–æ–π –ø–æ—Ä—Ç—Ñ–µ–ª—å', buttons=buttons.risk_profile1)
            elif -9 < final_profile_score <= -4:
                await client.edit_message(event.input_sender, old_msg_id,
                                          '–¢–≤–æ–∏ –ø–æ—Ä—Ç—Ñ–µ–ª–∏', buttons=buttons.risk_profile2)
            elif -4 < final_profile_score <= 1:
                await client.edit_message(event.input_sender, old_msg_id,
                                          '–¢–≤–æ–∏ –ø–æ—Ä—Ç—Ñ–µ–ª–∏', buttons=buttons.risk_profile3)
            elif 1 < final_profile_score < 6:
                await client.edit_message(event.input_sender, old_msg_id,
                                          '–¢–≤–æ–π –ø–æ—Ä—Ç—Ñ–µ–ª—å', buttons=buttons.risk_profile4)
            elif 6 <= final_profile_score < 10:
                await client.edit_message(event.input_sender, old_msg_id,
                                          '–¢–≤–æ–∏ –ø–æ—Ä—Ç—Ñ–µ–ª–∏', buttons=buttons.risk_profile5)
            elif final_profile_score >= 10:
                await client.edit_message(event.input_sender, old_msg_id,
                                          '–¢–≤–æ–∏ –ø–æ—Ä—Ç—Ñ–µ–ª–∏', buttons=buttons.risk_profile6)
    else:
        msg = None
        final_profile_score = get_final_score(sender_id)
        if final_profile_score <= -9:
            msg = await client.send_message(event.input_sender,
                                            '–¢–≤–æ–π –ø–æ—Ä—Ç—Ñ–µ–ª—å', buttons=buttons.risk_profile1)
        elif -9 < final_profile_score <= -4:
            msg = await client.send_message(event.input_sender,
                                            '–¢–≤–æ–∏ –ø–æ—Ä—Ç—Ñ–µ–ª–∏', buttons=buttons.risk_profile2)
        elif -4 < final_profile_score <= 1:
            msg = await client.send_message(event.input_sender,
                                            '–¢–≤–æ–∏ –ø–æ—Ä—Ç—Ñ–µ–ª–∏', buttons=buttons.risk_profile3)
        elif 1 < final_profile_score < 6:
            msg = await client.send_message(event.input_sender,
                                            '–¢–≤–æ–π –ø–æ—Ä—Ç—Ñ–µ–ª—å', buttons=buttons.risk_profile4)
        elif 6 <= final_profile_score < 10:
            msg = await client.send_message(event.input_sender,
                                            '–¢–≤–æ–∏ –ø–æ—Ä—Ç—Ñ–µ–ª–∏', buttons=buttons.risk_profile5)
        elif final_profile_score >= 10:
            msg = await client.send_message(event.input_sender,
                                            '–¢–≤–æ–∏ –ø–æ—Ä—Ç—Ñ–µ–ª–∏', buttons=buttons.risk_profile6)
        await shared.save_old_message(sender_id, msg)
